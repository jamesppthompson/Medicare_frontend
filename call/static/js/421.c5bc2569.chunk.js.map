{"version":3,"file":"static/js/421.c5bc2569.chunk.js","mappings":"oLAyBC,8CAtBM,WAAmBA,EAAOC,GAAQ,oFAEnCC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,EAAAA,kBAAAA,mCAAAA,+BAAAA,wBAAAA,oBAAAA,SAAYC,oBAAoB,CAAD,wCAC1B,CACLC,UAAW,SACXC,SAAU,SACVC,MAAO,cACPC,MAAO,gCACR,OAGmB,OAHnB,UAGDC,EAAAA,EAAAA,GAAaR,GAAO,SACC,OAAHS,EAAAA,QAAG,IAAHA,EAAAA,GAAU,QAAP,EAAHA,EAAAA,EAAAA,aAAU,WAAP,EAAH,EAAYC,IAAIT,GAAU,KAAD,EAAlC,GACW,OAAb,QADDU,EAAG,cACF,IAAHA,OAAG,EAAHA,EAAKC,QAAc,iBAEQ,OADrBC,EAASF,EAATE,KACRC,IAAIC,KAAK,GAAD,OAAIf,EAAK,MAAMa,GAAM,kBACtBA,GAAI,0DAGbC,IAAIE,MAAM,GAAD,OAAIhB,EAAK,YAAa,sCAE1BiB,GAAS,2DACjB,sBAED,IAxBO,SAAmB,EAAD,kC,yGC+BzB,IAnBiB,SAACC,GAAW,IAAD,EAC1B,GAA0BC,EAAAA,EAAAA,MAAa,eAAhCC,EAAK,KAAU,KAEtB,OACE,SAAC,IAAK,CACJC,GAAI,CAAEC,EAAG,UAAWC,QAAS,OAAQC,WAAY,SAAUC,MAAO,QAAS,UAE3E,UAAC,IAAK,YACJ,SAAC,IAAU,CAACC,QAAQ,KAAI,sBAGxB,SAAC,IAAU,CAACA,QAAQ,SAAQ,SACR,QADQ,EACzBN,EAAMO,mBAAW,aAAjB,EAAmBrB,YAK9B,C,2FCEA,IAtBkB,SAACY,GAEjB,OACE,UAAC,IAAK,CACJG,GAAI,CAAEC,EAAG,UAAWC,QAAS,OAAQC,WAAY,SAAUC,MAAO,QAAS,WAE3E,SAAC,KAAS,CACRJ,GAAI,CAAEO,GAAI,EAAGC,KAAM,GACnBC,YAAY,yBACZC,WAAY,CAAE,aAAc,0BAC5BC,MAAOd,EAAMe,YACbC,SAAU,SAACC,GACTjB,EAAMkB,kBAAkBD,EAAEE,OAAOL,MACnC,KAEF,SAAC,IAAG,CAACN,QAAQ,WAAWL,GAAI,CAAEC,EAAG,OAAQgB,EAAG,GAAK,aAAW,OAAOC,MAAM,UAAUC,SAAsC,GAA5BtB,EAAMe,YAAYQ,OAAaC,QAAS,WAAQxB,EAAMyB,eAAc,EAAM,EAAE,UACvK,SAAC,IAAQ,CAACtB,GAAI,CAAEuB,GAAI,EAAGhB,GAAI,SAInC,C,gWC7Be,SAASiB,EAAQ3B,GAE9B,IAiBM4B,EAAkB,SAACC,GASvB,MAAO,CAPMC,KAAKC,MAAMF,EAAS,OACnBC,KAAKC,MAChBF,EAAS,MAAwB,MAEpBC,KAAKC,MAAOF,EAAS,KAAmB,KACxCC,KAAKC,MAAOF,EAAS,IAAkB,KAGzD,EAEA,EA7BqB,WACnB,IAAMG,EAAgBhC,EAAMiC,UAE5B,GAAkCC,EAAAA,EAAAA,UAAS,GAAE,eAAtCL,EAAS,KAAEM,EAAY,KAW9B,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWC,aAAY,WAC3B,IAAMC,GAAU,IAAIC,MAAOC,UAAYT,EACvCG,EAAaI,EACf,GAAG,KAEH,OAAO,kBAAMG,cAAcL,EAAU,CACvC,GAAG,CAACL,IAEGJ,EAAgBC,EACzB,CAcwCc,GAAc,eAAzCC,GAAF,KAAO,MAAEC,EAAO,KAAEC,EAAO,KAEpC,OACE,4BACE,iBAAMC,UAAU,SAAQ,SAAEH,KAC1B,iBAAMG,UAAU,SAAQ,kBACxB,iBAAMA,UAAU,SAAQ,SAAEF,KAC1B,iBAAME,UAAU,SAAQ,kBACxB,iBAAMA,UAAU,SAAQ,SAAED,MAGhC,C,oICJME,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAe,gBAAGE,EAAK,EAALA,MAAK,MAAQ,CACrD,2BAA4B,CAC1BC,QAASD,EAAME,QAAQ,IAEzB,2BAA4B,CAC1BD,QAASD,EAAME,QAAQ,IAE1B,IAED,SAASC,EAAqBtD,GAC5B,IAAQuD,EAAgCvD,EAAhCuD,SAAUC,EAAsBxD,EAAtBwD,QAAYC,GAAK,OAAKzD,EAAK,GAE7C,OACE,UAAC0D,EAAA,GAAW,gBAACvD,GAAI,CAAEiB,EAAG,EAAGhB,EAAG,IAASqD,GAAK,cACvCF,EACAC,GACC,SAACG,EAAA,EAAU,CACT,aAAW,QACXnC,QAASgC,EACTrD,GAAI,CACFyD,SAAU,WACVC,MAAO,EACPC,IAAK,EACLzC,MAAO,SAAC8B,GAAK,OAAKA,EAAMY,QAAQC,KAAK,IAAI,GACzC,UAEF,SAACC,EAAA,EAAS,MAEV,QAGV,CAOA,IAuJA,EAvJmB,SAACjE,GAElB,OAAsCkC,EAAAA,EAAAA,WAAS,GAAM,eAA9CgC,EAAW,KAAEC,EAAc,KAClC,GAAkDjC,EAAAA,EAAAA,UAAS,IAAG,eAAvDkC,EAAiB,KAAEC,EAAoB,KAC9C,GAA0BnC,EAAAA,EAAAA,UAAS,IAAG,eAA/BoC,EAAK,KAAEC,EAAQ,KACtB,GAA8BrC,EAAAA,EAAAA,WAAS,GAAM,eAAtCsC,EAAO,KAAEC,EAAU,KAC1B,GAA0BxE,EAAAA,EAAAA,MAAa,eAAhCC,EAAK,KAONwE,GAPgB,KAOF,WAClBP,GAAe,EACjB,GAEMQ,EAAS,yCAAG,yGACP,OAAHpF,EAAAA,QAAG,IAAHA,EAAAA,GAAS,QAAN,EAAHA,EAAAA,EAAAA,YAAS,WAAN,EAAH,EAAWqF,KAAK,qBAAsB,CAC1CC,YAAaT,EAAkBhF,MAC/B0F,UAAW5E,EAAMO,YAAYsE,KAC5B,KAAD,EAEFN,GAAW,GACXN,GAAe,GAAO,2CACvB,kBARc,oCAUf/B,EAAAA,EAAAA,YAAU,WACR,IAAM4C,EAAU,yCAAG,0GACKxF,EAAAA,EAAAA,IAAIyF,EAAAA,EAAAA,MAAa,eAAe,KAAD,EAA/CC,EAAO,OACbC,QAAQvF,IAAIsF,GACZX,EAASW,GAAS,2CACnB,kBAJe,mCAMhBF,GACF,GAAG,IAOH,OACE,UAAC,IAAK,CAAC3B,QAAS,EAAG+B,MAAO,CAAE7E,MAAO,MAAO8E,OAAQ,OAAQC,UAAW,OAASC,eAAe,SAAQ,WACnG,UAAC,IAAK,CAACC,UAAU,MAAMnC,QAAS,EAAGkC,eAAe,SAAQ,UAEtDf,IAAW,UAAC,IAAK,YACf,SAAC,IAAK,CAACnB,QAAS,EAAGkC,eAAe,SAASC,UAAU,MAAK,UACxD,SAACC,EAAA,EAAM,CAACC,IAAKC,EAAcxF,GAAI,CAAEI,MAAO,GAAI8E,OAAQ,SAEtD,SAAC,IAAK,CAAChC,QAAS,EAAGkC,eAAe,SAASC,UAAU,MAAK,UACxD,SAAC,IAAU,CAAChF,QAAQ,KAAI,SACrB4D,EAAkBwB,aAK3B,UAAC,IAAK,YACJ,SAAC,IAAK,CAACvC,QAAS,EAAGkC,eAAe,SAASC,UAAU,MAAK,UACxD,SAACC,EAAA,EAAM,CAACC,IAAKC,EAAcxF,GAAI,CAAEI,MAAO,GAAI8E,OAAQ,SAEtD,SAAC,IAAK,CAAChC,QAAS,EAAGkC,eAAe,SAASC,UAAU,MAAK,UACxD,SAAC,IAAU,CAAChF,QAAQ,KAAI,SACrBR,EAAM6F,gBAKb7F,EAAM8F,gBAAkB,SAAC,IAAK,CAACzC,QAAS,EAAGkC,eAAe,SAASC,UAAU,MAAK,UAClF,SAAC,IAAU,CAAChF,QAAQ,KAAI,0BAMzBR,EAAM8F,gBAAkB,SAAC,IAAK,CAACzC,QAAS,EAAGkC,eAAe,SAASC,UAAU,MAAK,UACjF,SAAC,IAAU,CAAChF,QAAQ,KAAI,UACtB,SAACmB,EAAO,CAACM,UAAWjC,EAAMiC,iBAQ9B,UAAC,IAAK,CAACoB,QAAS,EAAGkC,eAAe,SAASC,UAAU,MAAMJ,MAAO,CAAEW,aAAc,QAAS,UAIxF/F,EAAM8F,gBACL,+BAIE,SAACE,EAAA,EAAG,CAAC,aAAW,WAAW3E,MAAM,UAAUG,QAAS,kBAAM2C,GAAgBD,EAAY,EAAC,UACrF,SAAC+B,EAAA,EAAO,CAAC9F,GAAI,CAAEuB,GAAI,EAAGhB,GAAI,UAKhC,SAACsF,EAAA,EAAG,CAAC,aAAW,WAAW3E,MAAM,QAAQG,QAAS,kBAAMxB,EAAMkG,SAAS,EAAC,UACtE,SAACC,EAAA,EAAQ,CAAChG,GAAI,CAAEuB,GAAI,EAAGhB,GAAI,WAI/B,UAACsC,EAAe,CACdQ,QAASkB,EACT,kBAAgB,0BAChB0B,KAAMlC,EACN/D,GAAI,CAAEkG,SAAU,KAAM,WAEtB,SAAC/C,EAAoB,CAACyB,GAAG,0BAA0BvB,QAASkB,EAAavE,GAAI,CAAEkG,SAAU,KAAM,oCAG/F,SAACC,EAAA,EAAa,CAACC,UAAQ,YACrB,UAAC,IAAK,CAACf,UAAU,MAAMnC,QAAS,EAAE,WAChC,UAACmD,EAAA,EAAW,CAACrG,GAAI,CAAEiB,EAAG,EAAGiF,SAAU,KAAOI,KAAK,QAAO,WACpD,SAACC,EAAA,EAAU,CAAC3B,GAAG,oBAAmB,2BAClC,SAAC4B,EAAA,EAAM,CACLC,QAAQ,oBACR7B,GAAG,oBACHjE,MAAOsD,EACPyC,MAAM,eACN7F,SAtFO,SAAC8F,GACpBzC,EAAqByC,EAAM3F,OAAOL,OAClCqE,QAAQvF,IAAIkH,EAAM3F,OAAOL,MAC3B,EAmFqC,SAEtBwD,EAAMyC,KAAI,SAACnB,GAAI,OACd,SAACoB,EAAA,EAAQ,CAEPlG,MAAO8E,EAAK,SAEXA,EAAKA,MAHDA,EAAKqB,IAID,UAIjB,SAACC,EAAA,EAAS,CAACnC,GAAG,iBAAiB8B,MAAM,IAAIrG,QAAQ,WAAWM,MAAOsD,EAAkBhF,MACnF+H,WAAY,CACVC,UAAU,WAIlB,SAACC,EAAA,EAAa,WACZ,SAAC,IAAM,CAACC,WAAS,EAAC9F,QAASmD,EAAU,wBAO/C,C,iJCxJA,IA5DmB,SAAC3E,GAElB,IAAMuH,EAAgBvH,EAAMuH,cA6B5B,OACE,SAAC,IAAK,CAAClE,QAAS,EAAG+B,MAAO,CAAE7E,MAAO,OAAQ,SAxBzB,CAClB,CACE,CAAEiH,OAAQ,IAAKC,MAAO,IACtB,CAAED,OAAQ,IAAKC,MAAO,SACtB,CAAED,OAAQ,IAAKC,MAAO,UAExB,CACE,CAAED,OAAQ,IAAKC,MAAO,SACtB,CAAED,OAAQ,IAAKC,MAAO,SACtB,CAAED,OAAQ,IAAKC,MAAO,UAExB,CACE,CAAED,OAAQ,IAAKC,MAAO,WACtB,CAAED,OAAQ,IAAKC,MAAO,SACtB,CAAED,OAAQ,IAAKC,MAAO,YAExB,CACE,CAAED,OAAQ,IAAKC,MAAO,IACtB,CAAED,OAAQ,IAAKC,MAAO,IACtB,CAAED,OAAQ,IAAKC,MAAO,MAORV,KAAI,SAACW,GAAI,OACnB,SAAC,IAAK,CAAClC,UAAU,MAAMnC,QAAS,EAAE,UAChC,SAAC,KAAI,CAACsE,WAAS,EAACC,WAAY,EAAE,SAE1BF,EAAKX,KAAI,SAACc,EAAKC,GAAK,OAClB,SAAC,KAAI,CAACJ,MAAI,EAAaK,GAAI,EAAE,UAC3B,SAAC,IAAM,CAACvH,QAAQ,OAAOa,MAAM,OAAO+D,MAAO,CAAE7E,MAAO,QAAUiB,QAAS,kBApCpEgG,EAoCsFK,EAAIL,YAnC7GD,EAAcC,GADI,IAACA,CAoCiG,EAAC,UACnG,UAAC,IAAK,CAACnE,QAAS,EAAE,WAChB,SAAC,IAAU,CAAC7C,QAAQ,KAAI,SACrBqH,EAAIL,SAEQ,KAAdK,EAAIJ,QAAiB,SAAC,IAAU,CAACjH,QAAQ,SAAQ,kBACnC,KAAdqH,EAAIJ,QAAiB,SAAC,IAAU,CAACjH,QAAQ,SAAQ,SAAEqH,EAAIJ,cAP9CK,EAUT,OAIP,KAKlB,C,+kBC8KA,EAzOoB,SAAC9H,IACFgI,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,MADjB,IAEA,GAAkC/F,EAAAA,EAAAA,WAAS,GAAM,eAA1CgG,EAAS,KAAEC,EAAY,KAE9B,GAA+FC,EAAAA,EAAAA,KAAvFC,EAAc,EAAdA,eAAgBC,EAAiB,EAAjBA,kBAAmBC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAASC,EAAM,EAANA,OAAQC,EAAS,EAATA,UAAWC,EAAa,EAAbA,cACrEC,GAAgBC,EAAAA,EAAAA,KAAhBD,YACR,GAAsC1G,EAAAA,EAAAA,WAAS,GAAM,eAA9C4G,EAAW,KAAEC,EAAc,MAElC3G,EAAAA,EAAAA,YAAU,WAIe,aAEtB,OAFsB,0BAAvB,mGACQ4G,IAAe,4CACtB,sBALkB,MAAfJ,IAEJ5I,EAAMiJ,cAAcN,GAAc,WACX,wBAGvBO,GACF,GAAG,CAACN,KAEJxG,EAAAA,EAAAA,YAAU,WAER,GADA+C,QAAQvF,IAAI,oBAAqB6I,GAC7BA,EAAQ,CACVtD,QAAQvF,IAAI,UAAW6I,GACvBU,IACA,IACEhE,QAAQvF,IAAI,UAAW6I,GACvBA,EAAOW,WACPL,GAAe,EAGjB,CAFE,MAAOM,GACPlE,QAAQvF,IAAIyJ,EACd,CAEF,CACF,GAAG,CAACZ,KAEJrG,EAAAA,EAAAA,YAAU,WACRX,GAAc,EAChB,GAAG,CAACqH,IAEJ,IAAME,EAAa,yCAAG,mFACpB,IACE7D,QAAQvF,IAAI,eAAgBgJ,GAC5BU,EAAiBV,EAMnB,CALE,MAAO9I,GACPqF,QAAQvF,IACN,qEAEFuF,QAAQvF,IAAIE,EACd,CAAC,2CACF,kBAVkB,mCAYbwJ,EAAmB,SAACC,GACxBpE,QAAQvF,IAAI,uBACZ8I,EACE,IAAIc,EAAAA,GAAOD,EAAa,CACtBE,SAAU,EAGVC,iBAAkB,CAAC,OAAQ,UAGjC,EAEMP,EAAqB,WACzBV,EAAOkB,GAAG,cAAc,WACtBxE,QAAQvF,IAAI,iDAEd,IAEA6I,EAAOkB,GAAG,SAAS,SAAU7J,GAC3BqF,QAAQvF,IAAI,wBAA0BE,EAAM8J,QAC9C,IAEAnB,EAAOkB,GAAG,WAAYE,GAEtBpB,EAAOqB,MAAMH,GAAG,eAAgBI,EAAsBC,KAAKvB,IAGvDA,EAAOqB,MAAMG,4BACf9E,QAAQvF,IAAI,6CAEhB,EAEMiK,EAAqB,SAACtB,GAC1BpD,QAAQvF,IAAI,sBAAD,OAAuB2I,EAAK2B,WAAWC,MACpD,EAEMJ,EAAwB,WACxBtB,IACF2B,EAAc,iBAAkB3B,EAAOqB,MAAMO,eAAe7K,OAC5D4K,EAAc,kBAAmB3B,EAAOqB,MAAMQ,gBAAgB9K,OAElE,EAEM4K,EAAgB,SAACG,EAAUC,GAG/B/B,EAAOqB,MAAMW,uBAAuBC,SAAQ,SAAUjC,EAAQ1D,GAC7CyF,EAAgB/D,KAC/B+D,EAAgBE,SAAQ,SAAUjC,GAC5BA,EAAOkC,WAAa5F,IACX,CAEf,GAQF,GACF,EAEM6F,EAAgB,yCAAG,WAAOpD,GAAM,8EAInC,GAHGqD,EAAS,CAEXC,GAAItD,IAGFiB,EAAO,CAAD,gBAGR,OAFAtD,QAAQvF,IAAI,sBAAD,OAAuBiL,EAAOC,GAAE,SAE3C,kBAE2BrC,EAAOsC,QAAQ,CAAEF,OAAAA,IAAS,OAA7CG,EAAU,OAChBC,EAAmBD,GAEnBxC,EAAQwC,GAAW,kDAGnB7F,QAAQvF,IAAI,EAAD,IAAK,gCAclBuF,QAAQvF,IAAI,wBAAuB,0DAEtC,gBAjCqB,sCA6ChBqL,EAAqB,SAAC1C,GAG1BA,EAAKoB,GAAG,UAAU,SAACuB,GAEjB/F,QAAQvF,IAAI,8BACZuL,GACF,IACA5C,EAAKoB,GAAG,cAAc,WAEpBxB,GAAa,GACbG,GAAkB,GAClBnD,QAAQvF,IAAI,iCACd,IACA2I,EAAKoB,GAAG,UAAU,WAEhBxE,QAAQvF,IAAI,8BACZwL,GACF,GACF,EAWM3J,EAAgB,SAAC4J,GACrBlD,EAAakD,GACblG,QAAQvF,IAAI,aAAc+I,GAC1BiC,EAAiBjC,GACjB3I,EAAMiJ,cAAc,GACtB,EAKMmC,EAAgB,WACpB,IACEjG,QAAQvF,IAAI,QAAS2I,GACrBA,EAAK+C,aACLnG,QAAQvF,IAAI,qBACZuI,GAAa,GACbG,GAAkB,GAClBtI,EAAMuL,eAAc,EAGtB,CAFE,MAAOtK,GACPkE,QAAQvF,IAAIqB,EACd,CACF,EAEMkK,EAAgB,WACpB7C,GAAkB,EACpB,EAEA,OACE,UAACkD,EAAA,EAAK,CAACjG,eAAe,SAASjF,WAAW,SAAS+C,QAAS,EAAE,WAC5D,SAACoI,EAAA,EAAQ,IAENvD,GAMG,SAACwD,EAAA,EAAU,CAAC5F,cAAeuC,EAAgBnC,QAASkF,EAAevF,KAAM7F,EAAM6F,KAAM0C,KAAMA,EAAMtG,WAAW,IAAIO,MAAOC,aALzH,iCACE,SAACkJ,EAAA,EAAS,CAACzK,kBAtCK,SAACsG,GACzBrC,QAAQvF,IAAI4H,GACZxH,EAAMiJ,cAAczB,EACtB,EAmC2DzG,YAAa4H,EAAelH,cAAeA,KAC5F,SAACmK,EAAA,EAAU,CAACrE,cA3CA,SAACC,GACrBxH,EAAMiJ,cAAcjJ,EAAM6L,WAAarE,EACzC,SAiDF,EChOMsE,EAAaC,EAAAA,YAAiB,SAAoB/L,EAAOgM,GAC3D,OAAO,SAACC,EAAA,GAAK,QAACzG,UAAU,KAAKwG,IAAKA,GAAShM,GAC/C,IAGKkM,EAAA,EAQU,SAASC,EAAcnM,GAAQ,IAAD,EACzC,EAAwB+L,EAAAA,UAAe,GAAM,eAC7C,GADW,KAAS,KACQA,EAAAA,SAAe,iBAAe,eAAnDvE,EAAM,KAAE4E,EAAS,KACxB,EAA4BL,EAAAA,UAAe,GAAM,eAAlCM,GAAF,KAAW,MAQlB3H,EAAc,WAChB1E,EAAMsM,SAAQ,EAClB,EAEA,OACI,0BACI,UAACpJ,EAAA,EAAM,CACHqJ,YAAU,EACVnG,KAAMpG,EAAMwM,OACZhJ,QAASkB,EACT+H,oBAAqBX,EAAW,WAEhC,SAACY,EAAA,EAAM,CAACvM,GAAI,CAAEyD,SAAU,YAAa,UACjC,UAAC+I,EAAA,EAAO,YACJ,UAACC,EAAA,EAAU,CAACzM,GAAI,CAAEO,GAAI,EAAGC,KAAM,GAAKH,QAAQ,KAAKqM,UAAU,MAAK,wBACvD7M,EAAM4F,KAAI,aAAK5F,EAAM8M,OAAM,SAEpC,SAACC,EAAA,EAAM,CAACzF,WAAS,EAACjG,MAAM,OAAOG,QAASkD,EAAY,oBAGpD,SAACqI,EAAA,EAAM,CAACzF,WAAS,EAACjG,MAAM,QAAQG,QAASkD,EAAY,iCAK7D,UAAC,IAAI,CAACiD,WAAS,EAACnC,UAAU,MAAK,WAC3B,SAAC,IAAI,CAACkC,MAAI,EAACK,GAAI,GAAG,UACd,SAACmE,EAAA,EAAG,CAAC/L,GAAI,CAAE6M,SAAU,EAAG5M,EAAG,EAAGgB,EAAG,IAAK,UAClC,SAAC,IAAI,CACDuG,WAAS,EACTtE,QAAS,EACTlD,GAAI,CACA,qBAAsB,MACtB8M,UAAW,gCACXC,WAAY,gCACZC,YAAa,UACb,UAAW,CACPC,YAAa,gCACbC,aAAc,gCACdF,YAAa,YAEnB,SAEU,QAFV,EAEDnN,EAAMsN,aAAK,aAAX,EAAavG,KAAI,SAACW,EAAMI,GAAK,OAC1B,SAAC,IAAI,CAAmBC,GAAI,GAAIwF,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAKC,UAAW,IAAI,UAClE,UAAClC,EAAA,EAAK,CAACnI,QAAS,EAAG+B,MAAO,CAAE7E,MAAO,OAAQ8E,OAAQ,OAAQC,UAAW,MAAQC,eAAe,SAAQ,WACjG,SAACiG,EAAA,EAAK,CAACnI,QAAS,EAAGkC,eAAe,SAASC,UAAU,MAAK,UACtD,SAACC,EAAA,EAAM,CAACC,IAAKC,EAAcxF,GAAI,CAAEI,MAAO,GAAI8E,OAAQ,SAExD,SAACmG,EAAA,EAAK,CAACnI,QAAS,EAAGkC,eAAe,SAASC,UAAU,MAAK,UACtD,SAACoH,EAAA,EAAU,CAACpM,QAAQ,KAAI,SACf,OAAJkH,QAAI,IAAJA,OAAI,EAAJA,EAAM9B,UAIf,SAAC4F,EAAA,EAAK,CAACnI,QAAS,EAAGkC,eAAe,SAASC,UAAU,MAAK,UACtD,SAACoH,EAAA,EAAU,CAACpM,QAAQ,KAAI,SACf,OAAJkH,QAAI,IAAJA,OAAI,EAAJA,EAAMtI,cAbZ0I,EAiBJ,WAKvB,SAAC,IAAI,CAACJ,MAAI,EAACK,GAAI,EAAE,UACb,SAAC4F,EAAQ,CAACpC,cAAec,EAAWR,WAAYrE,EAAQyB,cAzEvD,SAAC2E,GAClBzI,QAAQvF,IAAIgO,GACZxB,EAAUwB,EACd,EAsEyG/H,KAAM,gCAMnH,CC9GO,IAAMgI,EAAoB9B,EAAAA,cAC/B,CAAC,GAGU+B,EAA4B,SAAH,GAE/B,IADLvK,EAAQ,EAARA,SAEA,GAA8CrB,EAAAA,EAAAA,YAAU,eAAjD6L,EAAe,KAAEC,EAAkB,KAE1C,OACE,SAACH,EAAkBI,SAAQ,CACzBnN,MAAO,CACLiN,gBAAAA,EACAC,mBAAAA,GACA,SAEDzK,GAGP,ECjBA,EARsB,WACpB,OAAgD2K,EAAAA,EAAAA,YAAWL,GAC3D,MAAO,CACLE,gBAFqB,EAAfA,gBAGNC,mBAHyC,EAAlBA,mBAK3B,E,wBCqBA,SAASG,GAAqBC,EAAGC,EAAGC,GAChC,OAAID,EAAEC,GAAWF,EAAEE,IACP,EAERD,EAAEC,GAAWF,EAAEE,GACR,EAEJ,CACX,CAEA,SAASC,GAAcC,EAAOF,GAC1B,MAAiB,SAAVE,EACD,SAACJ,EAAGC,GAAC,OAAKF,GAAqBC,EAAGC,EAAGC,EAAQ,EAC7C,SAACF,EAAGC,GAAC,OAAMF,GAAqBC,EAAGC,EAAGC,EAAS,CACzD,CAIA,SAASG,GAAWC,EAAOC,GACvB,GAAoB,oBAATD,EACP,MAAO,GACX,IAAME,EAAiBF,EAAM3H,KAAI,SAAC8H,EAAI/G,GAAK,MAAK,CAAC+G,EAAI/G,EAAM,IAQ3D,OAPA8G,EAAeE,MAAK,SAACV,EAAGC,GACpB,IAAMG,EAAQG,EAAWP,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVG,EACOA,EAEJJ,EAAE,GAAKC,EAAE,EACpB,IACOO,EAAe7H,KAAI,SAAC8H,GAAE,OAAKA,EAAG,EAAE,GAC3C,CAEA,IAAME,GAAY,CACd,CACIhK,GAAI,OACJiK,SAAS,EACTC,gBAAgB,EAChBpI,MAAO,QAEX,CACI9B,GAAI,OACJiK,SAAS,EACTC,gBAAgB,EAChBpI,MAAO,eAEX,CACI9B,GAAI,QACJiK,SAAS,EACTC,gBAAgB,EAChBpI,MAAO,cAEX,CACI9B,GAAI,WACJiK,SAAS,EACTC,gBAAgB,EAChBpI,MAAO,YAEX,CACI9B,GAAI,eACJiK,SAAS,EACTC,gBAAgB,EAChBpI,MAAO,gBAEX,CACI9B,GAAI,SACJiK,SAAS,EACTC,gBAAgB,EAChBpI,MAAO,UAEX,CACI9B,GAAI,OACJ8B,MAAO,SAIf,SAASqI,GAAkBlP,GACvB,IAAQmP,EACJnP,EADImP,iBAAkBX,EACtBxO,EADsBwO,MAAOF,EAC7BtO,EAD6BsO,QAASc,EACtCpP,EADsCoP,YAAaC,EACnDrP,EADmDqP,SAAUC,EAC7DtP,EAD6DsP,cAMjE,OACI,SAACC,EAAA,EAAS,WACN,UAACC,EAAA,EAAQ,YACL,SAACC,EAAA,EAAS,CAACrM,QAAQ,WAAU,UACzB,SAACsM,EAAA,EAAQ,CACLrO,MAAM,UACNsO,cAAeP,EAAc,GAAKA,EAAcC,EAChDO,QAASP,EAAW,GAAKD,IAAgBC,EACzCrO,SAAUmO,EACVtO,WAAY,CACR,aAAc,2BAIzBkO,GAAUhI,KAAI,SAAC8I,GAAQ,OACpB,SAACJ,EAAA,EAAS,CAENK,OAAOD,EAASb,QAAU,UAC1B5L,QAASyM,EAASZ,eAAiB,OAAS,SAC5Cc,cAAezB,IAAYuB,EAAS9K,IAAKyJ,EAAc,UAEvD,UAACwB,EAAA,EAAc,CACXC,OAAQ3B,IAAYuB,EAAS9K,GAC7BS,UAAW8I,IAAYuB,EAAS9K,GAAKyJ,EAAQ,MAC7ChN,SA5BG0O,EA4BwBL,EAAS9K,GA5BpB,SAAC+B,GACrCwI,EAAcxI,EAAOoJ,EACzB,GA0BgE,UAEvCL,EAAShJ,MACTyH,IAAYuB,EAAS9K,IAClB,SAACmH,EAAA,EAAG,CAACW,UAAU,OAAO1M,GAAIgQ,EAAAA,EAAe,SAC1B,SAAV3B,EAAmB,oBAAsB,qBAE9C,SAfHqB,EAAS9K,IApBR,IAACmL,CAqCC,QAKhC,CAWA,SAASE,GAAqBpQ,GAC1B,IAAQoP,EAAgBpP,EAAhBoP,YAER,OACI,UAACzC,EAAA,EAAO,CACJxM,IAAE,QACEkQ,GAAI,CAAE9C,GAAI,GACV+C,GAAI,CAAEvI,GAAI,EAAGwF,GAAI,IACb6B,EAAc,GAAK,CACnBmB,QAAS,SAACpN,GAAK,OACXsE,EAAAA,EAAAA,IAAMtE,EAAMY,QAAQyM,QAAQC,KAAMtN,EAAMY,QAAQ2M,OAAOC,iBAAiB,IAElF,UAEDvB,EAAc,GACX,UAACxC,EAAA,EAAU,CACPzM,GAAI,CAAEQ,KAAM,YACZU,MAAM,UACNb,QAAQ,YACRqM,UAAU,MAAK,UAEduC,EAAW,gBAGhB,SAACxC,EAAA,EAAU,CACPzM,GAAI,CAAEQ,KAAM,YACZH,QAAQ,KACRuE,GAAG,aACH8H,UAAU,MAAK,gCAMtBuC,EAAc,GACX,SAACwB,EAAA,EAAO,CAACC,MAAM,SAAQ,UACnB,SAAClN,EAAA,EAAU,WACP,SAACmN,EAAA,EAAU,SAInB,SAACF,EAAA,EAAO,CAACC,MAAM,cAAa,UACxB,SAAClN,EAAA,EAAU,WACP,SAACoN,EAAA,EAAc,UAMvC,EAMoB9N,EAAAA,EAAAA,IAAO+N,EAAAA,EAAP/N,EAAc,gBAAGE,EAAK,EAALA,MAAK,MAAQ,CAC9C,oBAAqB,CACjBU,MAAO,EACPC,IAAK,GACLmN,OAAO,aAAD,OAAe9N,EAAMY,QAAQmN,WAAWC,OAC9C/N,QAAS,SAEhB,IAEc,SAASgO,KACpB,MAA0BrF,EAAAA,SAAe,OAAM,eAAxCyC,EAAK,KAAE6C,EAAQ,KACtB,EAA8BtF,EAAAA,SAAe,SAAQ,eAA9CuC,EAAO,KAAEgD,EAAU,KAC1B,EAAgCvF,EAAAA,SAAe,IAAG,eAA3CwF,EAAQ,KAAEC,EAAW,KAC5B,EAAwBzF,EAAAA,SAAe,GAAE,eAAlC0F,EAAI,KAAEC,EAAO,KACpB,EAA0B3F,EAAAA,UAAe,GAAM,eAAxC4F,EAAK,KACZ,GADsB,KACgB5F,EAAAA,SAAe,KAAG,eAAjD6F,EAAW,KAAEC,EAAc,KAClC,GAA8B3P,EAAAA,EAAAA,WAAS,GAAM,eAAtC4P,EAAO,KAAEC,EAAU,KAC1B,GAAsD7P,EAAAA,EAAAA,UAAS,gBAAe,eAAvE8P,EAAmB,KAAEC,EAAsB,KAClD,EAAgDC,IAAxCnE,EAAe,EAAfA,gBAAiBC,EAAkB,EAAlBA,mBACzB,GAAwC9L,EAAAA,EAAAA,YAAU,eAA3CiQ,GAAY,KAAEC,GAAe,KACpC,IAA4ClQ,EAAAA,EAAAA,YAAU,iBAA/CmQ,GAAc,MAAEC,GAAiB,OAExClQ,EAAAA,EAAAA,YAAU,WACN,IAAMmQ,EAAI,yCAAG,yFACgB,OAAzBpN,QAAQvF,IAAI,aAAa,UACDJ,EAAAA,GAAAA,IAAIyF,EAAAA,GAAAA,MAAa,mBAAmB,KAAD,EAArDuN,EAAS,OACfrN,QAAQvF,IAAIoO,GACZA,EAAmBwE,GAAW,2CACjC,kBALS,mCAMVD,GACJ,GAAG,IAGH,IAeME,GAAU,yCAAG,WAAO5K,GAAG,4EAEK,OAD9BoK,EAAuBpK,EAAIjC,MAC3B0M,GAAkBzK,EAAIiF,QAAQ,UACLtN,EAAAA,GAAAA,IAAIyF,EAAAA,GAAAA,MAAY,gCAAD,OAAkC4C,EAAIZ,MAAO,KAAD,EAA9EyL,EAAU,OAChBvN,QAAQvF,IAAI8S,GACZN,GAAgBM,GAChBX,GAAW,GAAM,2CACpB,gBAPe,sCA6CVY,GACFlB,EAAO,EAAI3P,KAAK8Q,IAAI,GAAI,EAAInB,GAAQG,GAA6B,OAAf7D,QAAe,IAAfA,OAAe,EAAfA,EAAiBxM,SAAU,EAEjF,OACI,UAAC2K,EAAA,EAAG,CAAC/L,GAAI,CAAEI,MAAO,QAAS,WACvB,UAACsS,EAAA,EAAK,CAAC1S,GAAI,CAAEI,MAAO,OAAQuS,GAAI,GAAI,WAChC,SAAC1C,GAAoB,CAAChB,YAAamC,EAAShQ,UAC5C,SAACwR,EAAA,EAAc,WACX,UAACC,EAAA,EAAK,CACF7S,GAAI,CAAEkG,SAAU,KAChB,kBAAgB,aAChBI,KAAMkL,EAAQ,QAAU,SAAS,WAEjC,SAACzC,GAAiB,CACdE,YAAamC,EAAShQ,OACtBiN,MAAOA,EACPF,QAASA,EACTa,iBAvEK,SAACrI,GAC1B,GAAIA,EAAM3F,OAAOyO,QAAjB,CACI,IAAMqD,EAAclF,EAAgBhH,KAAI,SAACmM,GAAC,OAAKA,EAAEtN,IAAI,IACrD4L,EAAYyB,EAEhB,MACAzB,EAAY,GAChB,EAiEwBlC,cA9EE,SAACxI,EAAOoJ,GAE9BmB,EADc/C,IAAY4B,GAAsB,QAAV1B,EACrB,OAAS,OAC1B8C,EAAWpB,EACf,EA2EwBb,SAAyB,OAAftB,QAAe,IAAfA,OAAe,EAAfA,EAAiBxM,UAE/B,UAAC4R,EAAA,EAAS,WAGL1E,GAAWV,EAAiBQ,GAAcC,EAAOF,IAC7C8E,MAAM3B,EAAOG,EAAaH,EAAOG,EAAcA,GAC/C7K,KAAI,SAACc,EAAKC,GAAW,IAAD,IA7B7BlC,EA8BkByN,GA9BlBzN,EA8B8CiC,EAAIjC,MA9Bb,IAA5B2L,EAAS+B,QAAQ1N,IA+BRgB,EAAO,kCAA8BkB,GAE3C,OACI,UAAC0H,EAAA,EAAQ,CACL+D,OAAK,EACLC,UAAW,EAAE,WAGb,SAAC/D,EAAA,EAAS,CAACrM,QAAQ,WAAU,UACzB,SAACsM,EAAA,EAAQ,CACLrO,MAAM,UACNG,QAAS,SAACsF,GAAK,OA3E3C,SAACA,EAAOlB,GACxB,IAAM6N,EAAgBlC,EAAS+B,QAAQ1N,GACnCqN,EAAc,IAEK,IAAnBQ,EACAR,EAAcA,EAAYS,OAAOnC,EAAU3L,GAClB,IAAlB6N,EACPR,EAAcA,EAAYS,OAAOnC,EAAS6B,MAAM,IACzCK,IAAkBlC,EAAShQ,OAAS,EAC3C0R,EAAcA,EAAYS,OAAOnC,EAAS6B,MAAM,GAAI,IAC7CK,EAAgB,IACvBR,EAAcA,EAAYS,OACtBnC,EAAS6B,MAAM,EAAGK,GAClBlC,EAAS6B,MAAMK,EAAgB,KAIvCjC,EAAYyB,EAChB,CAyDoEU,CAAY7M,EAAOe,EAAIjC,KAAK,EAChDgK,QAASyD,EACTxS,WAAY,CACR,kBAAmB+F,QAI/B,SAAC6I,EAAA,EAAS,CACN5C,UAAU,KACV9H,GAAI6B,EACJgN,MAAM,MACNxQ,QAAQ,OACR0M,MAAM,SAAQ,SAGbjI,EAAIjC,QAGT,SAAC6J,EAAA,EAAS,CAACK,MAAM,SAAQ,SAAEjI,EAAIiF,UAC/B,SAAC2C,EAAA,EAAS,CAACK,MAAM,SAAQ,SAAEjI,EAAIgM,aAC/B,SAACpE,EAAA,EAAS,CAACK,MAAM,SAAQ,SAAEjI,EAAIiM,YAC/B,SAACrE,EAAA,EAAS,CAACK,MAAM,SAAQ,SAAkB,QAAlB,EAAEjI,EAAIkM,oBAAY,aAAhB,EAAkBxS,UAC7C,SAACkO,EAAA,EAAS,CAACK,MAAM,SAAQ,SAAY,QAAZ,EAAEjI,EAAImM,cAAM,aAAV,EAAYzS,UACvC,SAACkO,EAAA,EAAS,CAACK,MAAM,SAAQ,UACrB,SAACnM,EAAA,EAAU,CAACnC,QAAS,kBAAMiR,GAAW5K,EAAI,EAAC,UACvC,SAAC1B,EAAA,EAAQ,CAAC9E,MAAM,kBA9BnBwG,EAAIjC,KAmCrB,IACH+M,GAAY,IACT,SAACnD,EAAA,EAAQ,CACLpK,MAAO,CACHC,QAASsM,EAAQ,GAAK,IAAMgB,IAC9B,UAEF,SAAClD,EAAA,EAAS,CAACwE,QAAS,eAMxC,SAACC,EAAA,EAAe,CACZC,mBAAoB,CAAC,EAAG,GAAI,IAC5BtH,UAAU,MACVuH,MAAsB,OAAfrG,QAAe,IAAfA,OAAe,EAAfA,EAAiBxM,OACxBqQ,YAAaA,EACbH,KAAMA,EACN4C,aAxGS,SAACvN,EAAOwN,GAC7B5C,EAAQ4C,EACZ,EAuGgBC,oBArGgB,SAACzN,GAC7B+K,EAAe2C,SAAS1N,EAAM3F,OAAOL,MAAO,KAC5C4Q,EAAQ,EACZ,QAqGQ,SAACvF,EAAa,CAACvG,KAAMoM,EAAqBlF,OAAQuF,GAAgB7F,OAAQsF,EAASxF,QAASyF,EAAYzE,MAAO6E,OAG3H,C,8NCxXMnP,IAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAe,gBAAGE,EAAK,EAALA,MAAK,MAAQ,CACnD,2BAA4B,CACxBC,QAASD,EAAME,QAAQ,IAE3B,2BAA4B,CACxBD,QAASD,EAAME,QAAQ,IAE9B,IAED,SAASC,GAAqBtD,GAC1B,IAAQuD,EAAgCvD,EAAhCuD,SAAUC,EAAsBxD,EAAtBwD,QAAYC,GAAK,QAAKzD,EAAK,IAE7C,OACI,UAAC0D,GAAA,GAAW,gBAACvD,GAAI,CAAEiB,EAAG,EAAGhB,EAAG,IAASqD,GAAK,cACrCF,EACAC,GACG,SAACG,EAAA,EAAU,CACP,aAAW,QACXnC,QAASgC,EACTrD,GAAI,CACAyD,SAAU,WACVC,MAAO,EACPC,IAAK,EACLzC,MAAO,SAAC8B,GAAK,OAAKA,EAAMY,QAAQC,KAAK,IAAI,GAC3C,UAEF,SAACC,GAAA,EAAS,MAEd,QAGhB,CAOA,IAEMwQ,GAAY,CACdC,WAAY,CACRtP,MAAO,CACHuP,UAAWC,IACXrU,MAAO,OAmBnB,SAASsU,GAAUjP,EAAMmO,EAAc5Q,GAEnC,MAAO,CACH2R,YACoC,IAAhCf,EAAaT,QAAQ1N,GACfzC,EAAM4R,WAAWC,kBACjB7R,EAAM4R,WAAWE,iBAEnC,CAEe,SAASC,GAAkBlV,GACtC,OAA0BC,EAAAA,GAAAA,MAAa,eAAhCC,EAAK,KACZ,GADsB,KAC0BgS,KAAxCnE,EAAe,EAAfA,gBAAiBC,EAAkB,EAAlBA,mBACnB7K,GAAQgS,EAAAA,GAAAA,KAEd,EAAwBpJ,EAAAA,UAAe,GAAM,eAC7C,GADW,KAAS,MACkB7J,EAAAA,EAAAA,UAAS,KAAG,eAA3CkT,EAAW,KAAEC,EAAc,KAClC,GAAsCnT,EAAAA,EAAAA,UAAS,gBAAe,eAAvDoT,EAAW,KAAEC,EAAc,KAClC,GAAkCrT,EAAAA,EAAAA,UAAS,oBAAmB,eAAvDsT,EAAS,KAAEC,EAAY,KAE9B,EAAwC1J,EAAAA,SAAe,IAAG,eAAnDgI,EAAY,KAAE2B,EAAe,KACpC,GAA0BxT,EAAAA,EAAAA,UAAS,IAAG,eAA/BoC,EAAK,KAAEC,EAAQ,MAEtBnC,EAAAA,EAAAA,YAAU,WACN,IAAM4C,EAAU,yCAAG,0GACOxF,EAAAA,GAAAA,IAAIyF,EAAAA,GAAAA,MAAa,eAAe,KAAD,EAA/CC,EAAO,OACbC,QAAQvF,IAAIsF,GACZX,EAASW,GAAS,2CACrB,kBAJe,mCAMhBF,GACJ,GAAG,IAEH,IAUMN,EAAc,WAChBS,QAAQvF,IAAI4V,GACZxV,EAAMsM,SAAQ,EAClB,EAEMqJ,EAAU,yCAAG,2FAIZ,OAHCC,EAAY,GAChB7B,EAAahN,KAAI,SAACW,GACdkO,EAAUC,KAAK,CAAEhQ,KAAM6B,EAAKT,KAChC,IAAG,UACerC,EAAAA,GAAAA,GAAK,kBAAmB,CACtCkR,OAAQ5V,EAAMO,YAAYsE,GAC1Ba,KAAM0P,EACNzB,UAAW2B,EACX1B,SAAUsB,EACVrB,aAAc6B,IAChB,OANInW,EAAG,OAOT0F,QAAQvF,IAAIH,GAEZiW,EAAgB,IAChB1H,EAAmB,GAAD,gBAAKD,GAAe,CAAEtO,KACxCO,EAAMsM,SAAQ,GAAO,2CACxB,kBAjBe,mCAmBhB,OACI,0BACI,UAACtJ,GAAe,CACZQ,QAASkB,EACT,kBAAgB,0BAChB0B,KAAMpG,EAAMwM,OACZrM,GAAI,CAAEkG,SAAU,KAAM,WAEtB,SAAC/C,GAAoB,CAACyB,GAAG,0BAA0BvB,QAASkB,EAAavE,GAAI,CAAEkG,SAAU,KAAM,2CAG/F,SAACC,GAAA,EAAa,CAACC,UAAQ,YACnB,UAACiF,EAAA,EAAK,CAACnI,QAAS,EAAE,WACd,SAACmI,EAAA,EAAK,WACF,SAACtE,GAAA,EAAS,CACNnC,GAAG,iBACH8B,MAAM,OACNkP,KAAK,OACLjV,MAAOwU,EACPtU,SAAU,SAACC,GAAC,OAAKsU,EAAetU,EAAEE,OAAOL,MAAM,EAC/CX,GAAI,CAAEI,MAAO,KACbyV,gBAAiB,CACbC,QAAQ,QAIpB,UAACzK,EAAA,EAAK,CAAChG,UAAU,MAAMnC,QAAS,EAAE,WAC9B,SAAC6D,GAAA,EAAS,CACNnC,GAAG,iBACH8B,MAAM,aACNkP,KAAK,iBACLjV,MAAO0U,EACPxU,SAAU,SAACC,GAAC,OAAKwU,EAAaxU,EAAEE,OAAOL,MAAM,EAC7CX,GAAI,CAAEI,MAAO,KACbyV,gBAAiB,CACbC,QAAQ,MAIhB,UAACzP,GAAA,EAAW,CAACrG,GAAI,CAAEiB,EAAG,EAAGiF,SAAU,KAAOI,KAAK,MAAK,WAChD,SAACC,GAAA,EAAU,CAAC3B,GAAG,qCAAoC,uBACnD,SAAC4B,GAAA,EAAM,CACHC,QAAQ,qCACR7B,GAAG,qCACHjE,MAAOsU,EACPvO,MAAM,WACN7F,SAAU,SAACC,GAAC,OAAKoU,EAAepU,EAAEE,OAAOL,MAAM,EAAC,SA9F1D,CAAC,GAAI,GAAI,GAAI,GAAI,IAiGWiG,KAAI,SAACW,GAAI,OACnB,UAACV,GAAA,EAAQ,CAAClG,MAAO4G,EAAK,wBAAOA,EAAI,WAAmB,aAMxE,SAAC8D,EAAA,EAAK,WACF,UAAChF,GAAA,EAAW,CAACrG,GAAI,CAAEiB,EAAG,EAAGiF,SAAU,KAAM,WACrC,SAACK,GAAA,EAAU,CAAC3B,GAAG,2BAA0B,2BACzC,SAAC4B,GAAA,EAAM,CACHC,QAAQ,2BACR7B,GAAG,qBACHmR,UAAQ,EACRpV,MAAOiT,EACP/S,SAlGX,SAAC8F,GAClB,IACchG,EACVgG,EADA3F,OAAUL,MAEd4U,EAEqB,kBAAV5U,EAAqBA,EAAMqV,MAAM,KAAOrV,EAEvD,EA2FgCsV,OAAO,SAACC,GAAA,EAAa,CAACtR,GAAG,uBAAuB8B,MAAM,iBACtDyP,YAAa,SAAC/E,GAAQ,OAClB,SAACrF,EAAA,EAAG,CAAC/L,GAAI,CAAEE,QAAS,OAAQkW,SAAU,OAAQC,IAAK,IAAM,SACpDjF,EAASxK,KAAI,SAACjG,GAAK,OAChB,SAAC2V,GAAA,EAAI,CAAiB5P,MAAO/F,EAAM8E,MAAxB9E,EAAMmG,IAA0B,KAE7C,EAEVwN,UAAWA,GAAU,SAEpBnQ,EAAMyC,KAAI,SAACnB,GAAI,OACZ,SAACoB,GAAA,EAAQ,CAELlG,MAAO8E,EACPR,MAAOyP,GAAUjP,EAAMmO,EAAc5Q,GAAO,SAE3CyC,EAAKA,MAJDA,EAAKqB,IAKH,iBAOnC,SAACI,GAAA,EAAa,WACV,SAAC0F,EAAA,EAAM,CAACzF,WAAS,EAAC9F,QAASmU,EAAW,0BAO1D,C,gECpKA,IAlEW,KACAe,GAAA,EACAC,GAAA,EACAC,GAAA,GAIa3T,EAAAA,EAAAA,IAAO4T,GAAAA,EAAP5T,EAAkB,gBAAGE,EAAK,EAALA,MAAK,MAAQ,CACxDS,SAAU,WACV,2DAA4D,CAC1DkT,OAAQ3T,EAAME,QAAQ,GACtBQ,MAAOV,EAAME,QAAQ,IAEvB,8DAA+D,CAC7DS,IAAKX,EAAME,QAAQ,GACnB0T,KAAM5T,EAAME,QAAQ,IAEvB,IAGsB,WACrB,MAA8B0I,EAAAA,SAAe,IAAG,eAChD,GADc,KAAY,MACE7J,EAAAA,EAAAA,UAAS,KAAG,eACxC,GADa,KAAW,MACIA,EAAAA,EAAAA,WAAS,IAAM,eAC3C,GADa,KAAW,MACMA,EAAAA,EAAAA,WAAS,IAAM,eAAtC4P,EAAO,KAAEC,EAAU,KAI1B,EAAsChG,EAAAA,SAAe,UAAS,eAAvDiL,EAAW,KAAgB,KAMlC,OACE,iCACE,6CACA,UAACxL,EAAA,EAAK,CAACnI,QAAS,EAAE,WAChB,SAACmI,EAAA,EAAK,CAAChG,UAAU,MAAK,UACpB,SAACuH,EAAA,EAAM,CAACvM,QAAQ,YAAYyW,WAAW,SAAChR,EAAA,EAAO,IAAKzE,QAAS,kBAAMuQ,GAAW,EAAK,EAAC,+BAoBtF,SAAC,GAAY,KACb,SAAC,GAAc,CAACvF,OAAQsF,EAASxF,QAASyF,EAAYiF,YAAaA,SAK3E,GCxEA,GAVmB,WACjB,OACE,SAAClJ,EAAyB,WACxB,SAAC,KAAM,WACL,SAAC,KAAK,CAACoJ,KAAK,IAAIC,SAAS,SAAC,GAAkB,SAIpD,C,4BCdIC,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,kFACD,UAEJN,EAAQ,EAAUG,C,4BCfdL,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,yIACD,oBAEJN,EAAQ,EAAUG,C,4BCfdL,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,sJACD,SAEJN,EAAQ,EAAUG,C,4BCfdL,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,mJACD,QAEJN,EAAQ,EAAUG,C,4BCfdL,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,4WACD,SAEJN,EAAQ,EAAUG,C","sources":["api/info/get.js","components/DialPad/CallFrom.js","components/DialPad/CallInput.js","components/DialPad/CountDown.js","components/DialPad/CallingPad.js","components/DialPad/DialButton.js","components/DialPad/AutoDial.js","views/ConferenceCall/MeetingDialog.js","contexts/ConferenceContext/ConferenceContextProvider.js","hooks/useConference.js","views/ConferenceCall/HistoryTable.js","views/ConferenceCall/CreationDialog.js","views/ConferenceCall/ConferenceCall.js","views/ConferenceCall/index.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/FileCopyOutlined.js","../node_modules/@mui/icons-material/Print.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/icons-material/Share.js"],"sourcesContent":["import { api } from '..';\r\nimport setAuthToken from '../setAuthToken';\r\n\r\nexport async function get(token, endpoint) {\r\n  // Dummy object, development only\r\n  if (process.env.REACT_APP_MULTIPASS)\r\n    return {\r\n      nameFirst: 'Leeloo',\r\n      nameLast: 'Dallas',\r\n      phone: '+1234567890',\r\n      email: 'Leeloo.Dallas@Multipass.com',\r\n    };\r\n\r\n  try {\r\n    setAuthToken(token);\r\n    const res = await api?.axios?.get(endpoint);\r\n    if (res?.status === 200) {\r\n      const { data } = res;\r\n      log.warn(`${token} -`, data);\r\n      return data;\r\n    }\r\n  } catch (error) {\r\n    log.error(`${token} -`, error);\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport default get;\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Button from '@mui/material/Button';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport Fab from '@mui/material/Fab';\r\nimport DirectionsIcon from '@mui/icons-material/Directions';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport { useAppStore } from '../../store/AppStore';\r\n\r\nconst CallFrom = (props) => {\r\n  const [state, dispatch] = useAppStore();\r\n\r\n  return (\r\n    <Paper\r\n      sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: \"100%\" }}\r\n    >\r\n      <Stack>\r\n        <Typography variant=\"h6\">\r\n          Call as\r\n        </Typography>\r\n        <Typography variant=\"button\">\r\n          {state.currentUser?.phone}\r\n        </Typography>\r\n      </Stack>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default CallFrom\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Button from '@mui/material/Button';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport Fab from '@mui/material/Fab';\r\nimport DirectionsIcon from '@mui/icons-material/Directions';\r\n\r\nconst CallInput = (props) => {\r\n\r\n  return (\r\n    <Paper\r\n      sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: \"100%\" }}\r\n    >\r\n      <InputBase\r\n        sx={{ ml: 1, flex: 1 }}\r\n        placeholder=\"Enter a name or number\"\r\n        inputProps={{ 'aria-label': 'enter a name or number' }}\r\n        value={props.phoneNumber}\r\n        onChange={(e) => {\r\n          props.handlePhoneNumber(e.target.value)\r\n        }}\r\n      />\r\n      <Fab variant=\"extended\" sx={{ p: '10px', m: 1 }} aria-label=\"call\" color=\"success\" disabled={props.phoneNumber.length == 0} onClick={() => { props.handleDialing(true) }}>\r\n        <CallIcon sx={{ mr: 2, ml: 2 }} />\r\n      </Fab>\r\n    </Paper >\r\n  )\r\n}\r\n\r\nexport default CallInput\r\n","import React from 'react'\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function Counter(props) {\r\n\r\n  const useCountdown = () => {\r\n    const countDownDate = props.timestamp;\r\n\r\n    const [countDown, setCountDown] = useState(0);\r\n\r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        const current = new Date().getTime() - countDownDate;\r\n        setCountDown(current);\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }, [countDownDate]);\r\n\r\n    return getReturnValues(countDown);\r\n  };\r\n\r\n  const getReturnValues = (countDown) => {\r\n    // calculate time left\r\n    const days = Math.floor(countDown / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor(\r\n      (countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n    );\r\n    const minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((countDown % (1000 * 60)) / 1000);\r\n\r\n    return [days, hours, minutes, seconds];\r\n  };\r\n\r\n  const [days, hours, minutes, seconds] = useCountdown();\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"time-1\">{hours}</span>\r\n      <span className=\"time-2\"> : </span>\r\n      <span className=\"time-3\">{minutes}</span>\r\n      <span className=\"time-4\"> : </span>\r\n      <span className=\"time-5\">{seconds}</span>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport Scrollbar from 'material-ui-shell/lib/components/Scrollbar/Scrollbar'\r\nimport { useIntl } from 'react-intl'\r\nimport PropTypes from 'prop-types';\r\nimport { useLocale } from 'base-shell/lib/providers/Locale'\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Fab from '@mui/material/Fab';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport RecordVoiceOverIcon from '@mui/icons-material/RecordVoiceOver';\r\nimport DialpadTwoToneIcon from '@mui/icons-material/DialpadTwoTone';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport get from '../../api/info/get';\r\nimport {api} from '../../api';\r\nimport { useAppStore } from '../../store/AppStore';\r\nimport { loadToken } from '../../api/auth/utils';\r\nimport Counter from './CountDown';\r\nimport avatar_image from '../../assets/call_avatar.png';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\nimport SecondaryDialButton from './SecondaryDialButton';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2),\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction BootstrapDialogTitle(props) {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n}\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nconst CallingPad = (props) => {\r\n\r\n  const [displayDial, setDisplayDial] = useState(false);\r\n  const [topMarketerNumber, setTopMarketerNumber] = useState(\"\");\r\n  const [names, setNames] = useState([]);\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [state, dispatch] = useAppStore();\r\n\r\n  const handleDigit = (digit) => {\r\n    console.log(digit);\r\n    props.call?.sendDigits(digit);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setDisplayDial(false)\r\n  };\r\n\r\n  const handleAdd = async () => {\r\n    await api?.auth?.post('api/twilio/addUser', {\r\n      PhoneNumber: topMarketerNumber.phone,\r\n      SessionID: state.currentUser.id\r\n    });\r\n    // props.makeCall(topMarketerNumber.phone);\r\n    setIsAdded(true);\r\n    setDisplayDial(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getClients = async () => {\r\n      const clients = await get(loadToken(), \"api/clients\");\r\n      console.log(clients);\r\n      setNames(clients);\r\n    }\r\n\r\n    getClients();\r\n  }, [])\r\n\r\n  const handleChange = (event) => {\r\n    setTopMarketerNumber(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={3} style={{ width: \"80%\", height: \"100%\", marginTop: \"30%\" }} justifyContent=\"center\">\r\n      <Stack direction=\"row\" spacing={2} justifyContent=\"center\">\r\n        {\r\n          isAdded && <Stack>\r\n            <Stack spacing={3} justifyContent=\"center\" direction=\"row\">\r\n              <Avatar src={avatar_image} sx={{ width: 84, height: 84 }} />\r\n            </Stack>\r\n            <Stack spacing={3} justifyContent=\"center\" direction=\"row\">\r\n              <Typography variant=\"h6\">\r\n                {topMarketerNumber.name}\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n        }\r\n        <Stack>\r\n          <Stack spacing={3} justifyContent=\"center\" direction=\"row\">\r\n            <Avatar src={avatar_image} sx={{ width: 84, height: 84 }} />\r\n          </Stack>\r\n          <Stack spacing={3} justifyContent=\"center\" direction=\"row\">\r\n            <Typography variant=\"h6\">\r\n              {props.user}\r\n            </Typography>\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n      {!props.isCallStarted && (<Stack spacing={3} justifyContent=\"center\" direction=\"row\">\r\n        <Typography variant=\"h6\">\r\n          Calling...\r\n        </Typography>\r\n      </Stack>\r\n      )\r\n      }\r\n      {props.isCallStarted && (<Stack spacing={3} justifyContent=\"center\" direction=\"row\">\r\n        <Typography variant=\"h6\">\r\n          <Counter timestamp={props.timestamp} />\r\n        </Typography>\r\n      </Stack>\r\n      )\r\n      }\r\n      {/* {\r\n        displayDial && (<SecondaryDialButton onClickNumber={handleDigit} />)\r\n      } */}\r\n      <Stack spacing={3} justifyContent=\"center\" direction=\"row\" style={{ marginBottom: '20px' }}>\r\n        {/* <Fab aria-label=\"record\" color=\"primary\" onClick={() => props.record()}>\r\n          <RecordVoiceOverIcon sx={{ mr: 2, ml: 2 }} />\r\n        </Fab> */}\r\n        {props.isCallStarted && (\r\n          <>\r\n            {/* <Fab aria-label=\"call-end\" color=\"default\" onClick={() => setDisplayDial(!displayDial)}>\r\n              <DialpadTwoToneIcon sx={{ mr: 2, ml: 2 }} />\r\n            </Fab> */}\r\n            <Fab aria-label=\"call-end\" color=\"default\" onClick={() => setDisplayDial(!displayDial)}>\r\n              <AddIcon sx={{ mr: 2, ml: 2 }} />\r\n            </Fab>\r\n          </>\r\n        )\r\n        }\r\n        <Fab aria-label=\"call-end\" color=\"error\" onClick={() => props.endCall()}>\r\n          <CallIcon sx={{ mr: 2, ml: 2 }} />\r\n        </Fab>\r\n      </Stack>\r\n\r\n      <BootstrapDialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={displayDial}\r\n        sx={{ minWidth: 500 }}\r\n      >\r\n        <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose} sx={{ minWidth: 500 }}>\r\n          Add a new participant\r\n        </BootstrapDialogTitle>\r\n        <DialogContent dividers>\r\n          <Stack direction=\"row\" spacing={5} >\r\n            <FormControl sx={{ m: 1, minWidth: 200 }} size=\"small\">\r\n              <InputLabel id=\"demo-select-small\">Top marketer</InputLabel>\r\n              <Select\r\n                labelId=\"demo-select-small\"\r\n                id=\"demo-select-small\"\r\n                value={topMarketerNumber}\r\n                label=\"Top marketer\"\r\n                onChange={handleChange}\r\n              >\r\n                {names.map((name) => (\r\n                  <MenuItem\r\n                    key={name._id}\r\n                    value={name}\r\n                  >\r\n                    {name.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <TextField id=\"standard-basic\" label=\" \" variant=\"standard\" value={topMarketerNumber.phone}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }} />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleAdd}>\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n    </Stack >\r\n  )\r\n}\r\n\r\nexport default CallingPad\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport Scrollbar from 'material-ui-shell/lib/components/Scrollbar/Scrollbar'\r\nimport { useIntl } from 'react-intl'\r\nimport { useLocale } from 'base-shell/lib/providers/Locale'\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Fab from '@mui/material/Fab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\nimport { NoBackpackSharp } from '@mui/icons-material';\r\n\r\nconst DialButton = (props) => {\r\n\r\n  const onClickNumber = props.onClickNumber;\r\n\r\n  const handleClick = (number) => {\r\n    onClickNumber(number);\r\n  }\r\n\r\n  const dialContent = [\r\n    [\r\n      { number: '1', alpha: \"\" },\r\n      { number: '2', alpha: \"a b c\" },\r\n      { number: '3', alpha: \"d e f\" },\r\n    ],\r\n    [\r\n      { number: '4', alpha: \"g h i\" },\r\n      { number: '5', alpha: \"j k l\" },\r\n      { number: '6', alpha: \"m n o\" },\r\n    ],\r\n    [\r\n      { number: '7', alpha: \"p q r s\" },\r\n      { number: '8', alpha: \"t u v\" },\r\n      { number: '9', alpha: \"w x y z\" },\r\n    ],\r\n    [\r\n      { number: '*', alpha: \"\" },\r\n      { number: '0', alpha: \"\" },\r\n      { number: '#', alpha: \"\" },\r\n    ]\r\n  ]\r\n\r\n  return (\r\n    <Stack spacing={3} style={{ width: \"80%\" }}>\r\n      {\r\n        dialContent.map((item) => (\r\n          <Stack direction=\"row\" spacing={0}>\r\n            <Grid container rowSpacing={0} >\r\n              {\r\n                item.map((row, index) => (\r\n                  <Grid item key={index} xs={4}>\r\n                    <Button variant=\"text\" color=\"info\" style={{ width: \"100%\" }} onClick={() => handleClick(row.number)}>\r\n                      <Stack spacing={0}>\r\n                        <Typography variant=\"h4\">\r\n                          {row.number}\r\n                        </Typography>\r\n                        {row.alpha === \"\" && (<Typography variant=\"button\">&nbsp;</Typography>)}\r\n                        {row.alpha !== \"\" && (<Typography variant=\"button\">{row.alpha}</Typography>)}\r\n                      </Stack>\r\n                    </Button>\r\n                  </Grid>\r\n                ))\r\n              }\r\n            </Grid>\r\n          </Stack>\r\n        ))\r\n      }\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default DialButton\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport Scrollbar from 'material-ui-shell/lib/components/Scrollbar/Scrollbar'\r\nimport { useNavigate, useLocation } from 'react-router-dom'\r\nimport { useIntl } from 'react-intl'\r\nimport { useLocale } from 'base-shell/lib/providers/Locale'\r\nimport Stack from '@mui/material/Stack';\r\nimport { Device } from '@twilio/voice-sdk'\r\nimport DialButton from \"./DialButton\";\r\nimport CallingPad from \"./CallingPad\";\r\nimport CallInput from \"./CallInput\";\r\nimport CallFrom from \"./CallFrom\";\r\nimport useCall from \"../../hooks/useCall\";\r\nimport useSocket from \"../../hooks/useSocket\";\r\n\r\nconst AutoDialPad = (props) => {\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const [isCalling, setIsCalling] = useState(false);\r\n  // const [isCallStarted, setIsCallStarted] = useState(false);\r\n  const { isCallingState, setIsCallingState, call, setCall, device, setDevice, gatewayNumber } = useCall();\r\n  const { twilioToken } = useSocket();\r\n  const [deviceReady, setDeviceReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (twilioToken == null)\r\n      return;\r\n    props.setDialNumber(gatewayNumber)\r\n    async function getFetch() {\r\n      await startUpClient()\r\n    }\r\n    getFetch()\r\n  }, [twilioToken])\r\n\r\n  useEffect(() => {\r\n    console.log('device useEffect:', device)\r\n    if (device) {\r\n      console.log('device:', device)\r\n      addDeviceListeners()\r\n      try {\r\n        console.log(\"device:\", device)\r\n        device.register()\r\n        setDeviceReady(true);\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n\r\n    }\r\n  }, [device])\r\n\r\n  useEffect(() => {\r\n    handleDialing(true)\r\n  }, [deviceReady])\r\n\r\n  const startUpClient = async () => {\r\n    try {\r\n      console.log('Got a token.', twilioToken)\r\n      initializeDevice(twilioToken)\r\n    } catch (error) {\r\n      console.log(\r\n        'An error occurred. See your browser console for more information.'\r\n      )\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const initializeDevice = (accessToken) => {\r\n    console.log('Initializing device')\r\n    setDevice(\r\n      new Device(accessToken, {\r\n        logLevel: 1,\r\n        // Set Opus as our preferred codec. Opus generally performs better, requiring less bandwidth and\r\n        // providing better audio quality in restrained network conditions.\r\n        codecPreferences: ['opus', 'pcmu'],\r\n      })\r\n    )\r\n  }\r\n\r\n  const addDeviceListeners = () => {\r\n    device.on('registered', function () {\r\n      console.log('Twilio.Device Ready to make and receive calls!')\r\n      // callControlsDiv.classList.remove('hide')\r\n    })\r\n\r\n    device.on('error', function (error) {\r\n      console.log('Twilio.Device Error: ' + error.message)\r\n    })\r\n\r\n    device.on('incoming', handleIncomingCall)\r\n\r\n    device.audio.on('deviceChange', updateAllAudioDevices.bind(device))\r\n\r\n    // Show audio selection UI if it is supported by the browser.\r\n    if (device.audio.isOutputSelectionSupported) {\r\n      console.log(\"audioSelectionDiv.classList.remove('hide')\") // audioSelectionDiv.classList.remove('hide')\r\n    }\r\n  }\r\n\r\n  const handleIncomingCall = (call) => {\r\n    console.log(`Incoming call from ${call.parameters.From}`)\r\n  }\r\n\r\n  const updateAllAudioDevices = () => {\r\n    if (device) {\r\n      updateDevices('speakerDevices', device.audio.speakerDevices.get())\r\n      updateDevices('ringtoneDevices', device.audio.ringtoneDevices.get())\r\n    }\r\n  }\r\n\r\n  const updateDevices = (selectEl, selectedDevices) => {\r\n    // selectEl.innerHTML = \"\";\r\n\r\n    device.audio.availableOutputDevices.forEach(function (device, id) {\r\n      var isActive = selectedDevices.size === 0 && id === 'default'\r\n      selectedDevices.forEach(function (device) {\r\n        if (device.deviceId === id) {\r\n          isActive = true\r\n        }\r\n      })\r\n      // var option = document.createElement(\"option\");\r\n      // option.label = device.label;\r\n      // option.setAttribute(\"data-id\", id);\r\n      // if (isActive) {\r\n      //   option.setAttribute(\"selected\", \"selected\");\r\n      // }\r\n      // selectEl.appendChild(option);\r\n    })\r\n  }\r\n\r\n  const makeOutgoingCall = async (number) => {\r\n    var params = {\r\n      // get the phone number to call from the DOM\r\n      To: number,\r\n    }\r\n\r\n    if (device) {\r\n      console.log(`Attempting to call ${params.To} ...`)\r\n\r\n      // Twilio.Device.connect() returns a Call object\r\n      try {\r\n        const twilioCall = await device.connect({ params })\r\n        registerCallEvents(twilioCall)\r\n        // call = twilioCall\r\n        setCall(twilioCall)\r\n      }\r\n      catch (err) {\r\n        console.log(err)\r\n      }\r\n\r\n      // add listeners to the Call\r\n      // \"accepted\" means the call has finished connecting and the state is now \"open\"\r\n      // call.on('accept', updateUIAcceptedOutgoingCall)\r\n      // call.on('disconnect', updateUIDisconnectedOutgoingCall)\r\n      // call.on('cancel', updateUIDisconnectedOutgoingCall)\r\n\r\n      // outgoingCallHangupButton.onclick = () => {\r\n      //   console.log('Hanging up ...')\r\n      //   call.disconnect()\r\n      // }\r\n    } else {\r\n      console.log('Unable to make call.')\r\n    }\r\n  }\r\n\r\n  const getUserMedia = () => {\r\n    navigator.getUserMedia =\r\n      navigator.getUserMedia ||\r\n      navigator.webkitGetUserMedia ||\r\n      navigator.mozGetUserMedia\r\n    return new Promise((resolve, reject) => {\r\n      navigator.getUserMedia({ video: true, audio: true }, resolve, reject)\r\n    })\r\n  }\r\n\r\n  const registerCallEvents = (call) => {\r\n    // add listeners to the Call\r\n    // \"accepted\" means the call has finished connecting and the state is now \"open\"\r\n    call.on('accept', (remoteStream) => {\r\n      // dialpad.setOnCall()\r\n      console.log(\"registerCallEvents: accept\")\r\n      handleReplied()\r\n    })\r\n    call.on('disconnect', () => {\r\n      // dialpad.endCall()\r\n      setIsCalling(false);\r\n      setIsCallingState(false);\r\n      console.log(\"registerCallEvents: disconnect\")\r\n    })\r\n    call.on('cancel', () => {\r\n      // dialpad.endCall()\r\n      console.log(\"registerCallEvents: cancel\")\r\n      handleEndCall()\r\n    })\r\n  }\r\n\r\n  const onClickNumber = (number) => {\r\n    props.setDialNumber(props.dialNumber + number)\r\n  }\r\n\r\n  const handlePhoneNumber = (number) => {\r\n    console.log(number)\r\n    props.setDialNumber(number);\r\n  }\r\n\r\n  const handleDialing = (setCalling) => {\r\n    setIsCalling(setCalling);\r\n    console.log('Calling...', gatewayNumber)\r\n    makeOutgoingCall(gatewayNumber)\r\n    props.setDialNumber('');\r\n  }\r\n\r\n  // useEffect(() => {\r\n  // }, [props.dialNumber])\r\n\r\n  const handleEndCall = () => {\r\n    try {\r\n      console.log(\"call:\", call)\r\n      call.disconnect()\r\n      console.log(\"call disconnected\");\r\n      setIsCalling(false);\r\n      setIsCallingState(false);\r\n      props.triggerReload(true);\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const handleReplied = () => {\r\n    setIsCallingState(true);\r\n  }\r\n\r\n  return (\r\n    <Stack justifyContent=\"center\" alignItems=\"center\" spacing={5}>\r\n      <CallFrom />\r\n      {\r\n        !isCalling ? (\r\n          <>\r\n            <CallInput handlePhoneNumber={handlePhoneNumber} phoneNumber={gatewayNumber} handleDialing={handleDialing} />\r\n            <DialButton onClickNumber={onClickNumber} />\r\n          </>\r\n        )\r\n          : <CallingPad isCallStarted={isCallingState} endCall={handleEndCall} user={props.user} call={call} timestamp={new Date().getTime()} />\r\n\r\n      }\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default AutoDialPad\r\n","import * as React from 'react';\r\nimport { useEffect, useState, useMemo } from 'react'\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from '@mui/material/Slide';\r\nimport Stack from '@mui/material/Stack';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport avatar_image from '../../assets/call_avatar.png';\r\nimport AutoDial from \"../../components/DialPad/AutoDial\";\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst bull = (\r\n    <Box\r\n        component=\"span\"\r\n        sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\r\n    >\r\n        •\r\n    </Box>\r\n);\r\n\r\nexport default function MeetingDialog(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [number, setNumber] = React.useState('+12024172529');\r\n    const [reload, setReload] = React.useState(false);\r\n\r\n    const handleNumber = (num) => {\r\n        console.log(num);\r\n        setNumber(num);\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        props.setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen\r\n                open={props.isOpen}\r\n                onClose={handleClose}\r\n                TransitionComponent={Transition}\r\n            >\r\n                <AppBar sx={{ position: 'relative' }}>\r\n                    <Toolbar>\r\n                        <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n                            ${`${props.name} (${props.roomid})`}\r\n                        </Typography>\r\n                        <Button autoFocus color=\"info\" onClick={handleClose}>\r\n                            Start\r\n                        </Button>\r\n                        <Button autoFocus color=\"error\" onClick={handleClose}>\r\n                            Leave Meeting\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={10}>\r\n                        <Box sx={{ flexGrow: 1, p: 2, m: 10 }}>\r\n                            <Grid\r\n                                container\r\n                                spacing={4}\r\n                                sx={{\r\n                                    '--Grid-borderWidth': '1px',\r\n                                    borderTop: 'var(--Grid-borderWidth) solid',\r\n                                    borderLeft: 'var(--Grid-borderWidth) solid',\r\n                                    borderColor: 'divider',\r\n                                    '& > div': {\r\n                                        borderRight: 'var(--Grid-borderWidth) solid',\r\n                                        borderBottom: 'var(--Grid-borderWidth) solid',\r\n                                        borderColor: 'divider',\r\n                                    },\r\n                                }}\r\n                            >\r\n                                {props.users?.map((item, index) => (\r\n                                    <Grid key={index} {...{ xs: 12, sm: 6, md: 4, lg: 3 }} minHeight={160}>\r\n                                        <Stack spacing={3} style={{ width: \"100%\", height: \"100%\", marginTop: \"0%\" }} justifyContent=\"center\">\r\n                                            <Stack spacing={3} justifyContent=\"center\" direction=\"row\">\r\n                                                <Avatar src={avatar_image} sx={{ width: 84, height: 84 }} />\r\n                                            </Stack>\r\n                                            <Stack spacing={3} justifyContent=\"center\" direction=\"row\">\r\n                                                <Typography variant=\"h6\">\r\n                                                    {item?.name}\r\n                                                </Typography>\r\n                                            </Stack>\r\n\r\n                                            <Stack spacing={3} justifyContent=\"center\" direction=\"row\">\r\n                                                <Typography variant=\"h6\">\r\n                                                    {item?.phone}\r\n                                                </Typography>\r\n                                            </Stack>\r\n                                        </Stack>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <AutoDial triggerReload={setReload} dialNumber={number} setDialNumber={handleNumber} user={\"Conference Gateway\"} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, {\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  PropsWithChildren,\r\n} from \"react\";\r\n\r\n\r\nexport const ConferenceContext = React.createContext(\r\n  {}\r\n);\r\n\r\nexport const ConferenceContextProvider = ({\r\n  children,\r\n}) => {\r\n  const [conferenceTable, setConferenceTable] = useState();\r\n\r\n  return (\r\n    <ConferenceContext.Provider\r\n      value={{\r\n        conferenceTable,\r\n        setConferenceTable\r\n      }}\r\n    >\r\n      {children}\r\n    </ConferenceContext.Provider>\r\n  );\r\n};","import { useContext } from \"react\";\r\nimport { ConferenceContext } from \"../contexts/ConferenceContext\";\r\n\r\nconst useConference = () => {\r\n  const { conferenceTable, setConferenceTable } = useContext(ConferenceContext);\r\n  return {\r\n    conferenceTable: conferenceTable,\r\n    setConferenceTable: setConferenceTable\r\n  };\r\n};\r\n\r\nexport default useConference;\r\n","import React, { useEffect, useState, useMemo } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { styled } from '@mui/material/styles';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport Badge from '@mui/material/Badge';\r\nimport MeetingDialog from './MeetingDialog';\r\nimport { yellow } from '@mui/material/colors';\r\nimport useConference from '../../hooks/useConference';\r\nimport get from '../../api/info/get';\r\nimport { loadToken } from '../../api/auth/utils';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort(array, comparator) {\r\n    if (typeof array == \"undefined\")\r\n        return [];\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    {\r\n        id: 'name',\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: 'Name',\r\n    },\r\n    {\r\n        id: 'room',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Room Number',\r\n    },\r\n    {\r\n        id: 'start',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Start Time',\r\n    },\r\n    {\r\n        id: 'duration',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Duration',\r\n    },\r\n    {\r\n        id: 'participants',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Participants',\r\n    },\r\n    {\r\n        id: 'online',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Online',\r\n    },\r\n    {\r\n        id: 'join',\r\n        label: 'Join',\r\n    }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n        props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'center' : 'center'}\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <Box component=\"span\" sx={visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </Box>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction EnhancedTableToolbar(props) {\r\n    const { numSelected } = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            sx={{\r\n                pl: { sm: 2 },\r\n                pr: { xs: 1, sm: 1 },\r\n                ...(numSelected > 0 && {\r\n                    bgcolor: (theme) =>\r\n                        alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\r\n                }),\r\n            }}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography\r\n                    sx={{ flex: '1 1 100%' }}\r\n                    color=\"inherit\"\r\n                    variant=\"subtitle1\"\r\n                    component=\"div\"\r\n                >\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography\r\n                    sx={{ flex: '1 1 100%' }}\r\n                    variant=\"h6\"\r\n                    id=\"tableTitle\"\r\n                    component=\"div\"\r\n                >\r\n                    Conference History\r\n                </Typography>\r\n            )}\r\n\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : (\r\n                <Tooltip title=\"Filter list\">\r\n                    <IconButton>\r\n                        <FilterListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n}\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n    '& .MuiBadge-badge': {\r\n        right: 0,\r\n        top: 10,\r\n        border: `2px solid ${theme.palette.background.paper}`,\r\n        padding: '0 4px',\r\n    },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('start');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [dlgOpen, setDlgOpen] = useState(false);\r\n    const [selectedMeetingName, setSelectedMeetingName] = useState(\"Conference 1\")\r\n    const { conferenceTable, setConferenceTable } = useConference();\r\n    const [meetingUsers, setMeetingUsers] = useState();\r\n    const [selectedRoomID, setSelectedRoomID] = useState();\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            console.log(\"init here\");\r\n            const tableData = await get(loadToken(), \"api/conferences\");\r\n            console.log(setConferenceTable);\r\n            setConferenceTable(tableData);\r\n        }\r\n        init();\r\n    }, [])\r\n\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelected = conferenceTable.map((n) => n.name);\r\n            setSelected(newSelected);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleJoin = async (row) => {\r\n        setSelectedMeetingName(row.name)\r\n        setSelectedRoomID(row.roomid);\r\n        const part_users = await get(loadToken(), `api/conferences/participants/${row._id}`);\r\n        console.log(part_users);\r\n        setMeetingUsers(part_users);\r\n        setDlgOpen(true);\r\n    }\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChangeDense = (event) => {\r\n        setDense(event.target.checked);\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    // Avoid a layout jump when reaching the last page with empty rows.\r\n    const emptyRows =\r\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - conferenceTable?.length) : 0;\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Paper sx={{ width: '100%', mb: 2 }}>\r\n                <EnhancedTableToolbar numSelected={selected.length} />\r\n                <TableContainer>\r\n                    <Table\r\n                        sx={{ minWidth: 750 }}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? 'small' : 'medium'}\r\n                    >\r\n                        <EnhancedTableHead\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={conferenceTable?.length}\r\n                        />\r\n                        <TableBody>\r\n                            {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                 rows.sort(getComparator(order, orderBy)).slice() */}\r\n                            {stableSort(conferenceTable, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.name);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            tabIndex={-1}\r\n                                            key={row.name}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    color=\"primary\"\r\n                                                    onClick={(event) => handleClick(event, row.name)}\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{\r\n                                                        'aria-labelledby': labelId,\r\n                                                    }}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell\r\n                                                component=\"th\"\r\n                                                id={labelId}\r\n                                                scope=\"row\"\r\n                                                padding=\"none\"\r\n                                                align=\"center\"\r\n                                            >\r\n                                                {/* <StyledBadge badgeContent={\"\"} color=\"primary\"> */}\r\n                                                {row.name}\r\n                                                {/* </StyledBadge> */}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">{row.roomid}</TableCell>\r\n                                            <TableCell align=\"center\">{row.starttime}</TableCell>\r\n                                            <TableCell align=\"center\">{row.duration}</TableCell>\r\n                                            <TableCell align=\"center\">{row.participants?.length}</TableCell>\r\n                                            <TableCell align=\"center\">{row.online?.length}</TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <IconButton onClick={() => handleJoin(row)}>\r\n                                                    <CallIcon color=\"primary\" />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow\r\n                                    style={{\r\n                                        height: (dense ? 33 : 53) * emptyRows,\r\n                                    }}\r\n                                >\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={conferenceTable?.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n            <MeetingDialog name={selectedMeetingName} roomid={selectedRoomID} isOpen={dlgOpen} setOpen={setDlgOpen} users={meetingUsers} />\r\n        </Box>\r\n    );\r\n}","import React, { useEffect, useState, useMemo } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Chip from '@mui/material/Chip';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Box from '@mui/material/Box';\r\nimport { useAppStore } from '../../store/AppStore';\r\nimport get from '../../api/info/get';\r\nimport post from '../../api/auth/post';\r\nimport { loadToken } from '../../api/auth/utils';\r\nimport useConference from '../../hooks/useConference';\r\n\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n        padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction BootstrapDialogTitle(props) {\r\n    const { children, onClose, ...other } = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: 8,\r\n                        top: 8,\r\n                        color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </DialogTitle>\r\n    );\r\n}\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst names = [\r\n    'Oliver Hansen',\r\n    'Van Henry',\r\n    'April Tucker',\r\n    'Ralph Hubbard',\r\n    'Omar Alexander',\r\n    'Carlos Abbott',\r\n    'Miriam Wagner',\r\n    'Bradley Wilkerson',\r\n    'Virginia Andrews',\r\n    'Kelly Snyder',\r\n];\r\n\r\n\r\nfunction getStyles(name, participants, theme) {\r\n\r\n    return {\r\n        fontWeight:\r\n            participants.indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\nexport default function CustomizedDialogs(props) {\r\n    const [state, dispatch] = useAppStore();\r\n    const { conferenceTable, setConferenceTable } = useConference();\r\n    const theme = useTheme();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [meetingTime, setMeetingTime] = useState(30);\r\n    const [meetingName, setMeetingName] = useState('Conference 1');\r\n    const [startTime, setStartTime] = useState(\"2022-11-10T10:30\");\r\n    const availableTime = [15, 30, 45, 60, 90];\r\n    const [participants, setParticipants] = React.useState([]);\r\n    const [names, setNames] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getClients = async () => {\r\n            const clients = await get(loadToken(), \"api/clients\");\r\n            console.log(clients);\r\n            setNames(clients);\r\n        }\r\n\r\n        getClients();\r\n    }, [])\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setParticipants(\r\n            // On autofill we get a stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const handleClose = () => {\r\n        console.log(startTime)\r\n        props.setOpen(false);\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        let clientIds = [];\r\n        participants.map((item) => {\r\n            clientIds.push({ user: item._id });\r\n        });\r\n        const res = await post(\"api/conferences\", {\r\n            agency: state.currentUser.id,\r\n            name: meetingName,\r\n            starttime: startTime,\r\n            duration: meetingTime,\r\n            participants: clientIds\r\n        })\r\n        console.log(res);\r\n\r\n        setParticipants([]);\r\n        setConferenceTable([...conferenceTable, res]);\r\n        props.setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <BootstrapDialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={props.isOpen}\r\n                sx={{ minWidth: 500 }}\r\n            >\r\n                <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose} sx={{ minWidth: 500 }}>\r\n                    Create a new conference call\r\n                </BootstrapDialogTitle>\r\n                <DialogContent dividers>\r\n                    <Stack spacing={3}>\r\n                        <Stack>\r\n                            <TextField\r\n                                id=\"datetime-local\"\r\n                                label=\"Name\"\r\n                                type=\"text\"\r\n                                value={meetingName}\r\n                                onChange={(e) => setMeetingName(e.target.value)}\r\n                                sx={{ width: 250 }}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Stack>\r\n                        <Stack direction=\"row\" spacing={2}>\r\n                            <TextField\r\n                                id=\"datetime-local\"\r\n                                label=\"Start Time\"\r\n                                type=\"datetime-local\"\r\n                                value={startTime}\r\n                                onChange={(e) => setStartTime(e.target.value)}\r\n                                sx={{ width: 250 }}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n\r\n                            <FormControl sx={{ m: 1, minWidth: 120 }} size=\"big\">\r\n                                <InputLabel id=\"demo-simple-select-autowidth-label\">Duration</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-autowidth-label\"\r\n                                    id=\"demo-simple-select-autowidth-label\"\r\n                                    value={meetingTime}\r\n                                    label=\"Duration\"\r\n                                    onChange={(e) => setMeetingTime(e.target.value)}\r\n                                >\r\n                                    {\r\n                                        availableTime.map((item) => (\r\n                                            <MenuItem value={item} > {`${item} mins`}</MenuItem>\r\n                                        ))\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Stack>\r\n                        <Stack>\r\n                            <FormControl sx={{ m: 1, minWidth: 300 }}>\r\n                                <InputLabel id=\"demo-multiple-chip-label\">Participants</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-multiple-chip-label\"\r\n                                    id=\"demo-multiple-chip\"\r\n                                    multiple\r\n                                    value={participants}\r\n                                    onChange={handleChange}\r\n                                    input={<OutlinedInput id=\"select-multiple-chip\" label=\"Participants\" />}\r\n                                    renderValue={(selected) => (\r\n                                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                                            {selected.map((value) => (\r\n                                                <Chip key={value._id} label={value.name} />\r\n                                            ))}\r\n                                        </Box>\r\n                                    )}\r\n                                    MenuProps={MenuProps}\r\n                                >\r\n                                    {names.map((name) => (\r\n                                        <MenuItem\r\n                                            key={name._id}\r\n                                            value={name}\r\n                                            style={getStyles(name, participants, theme)}\r\n                                        >\r\n                                            {name.name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Stack>\r\n                    </Stack>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleSave}>\r\n                        Create\r\n                    </Button>\r\n                </DialogActions>\r\n            </BootstrapDialog>\r\n        </div>\r\n    );\r\n}","import { Button } from '@mui/material'\r\nimport Page from 'material-ui-shell/lib/containers/Page'\r\nimport React, { useEffect, useState, useMemo } from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { styled } from '@mui/material/styles';\r\nimport Select from '@mui/material/Select';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport HistoryTable from './HistoryTable';\r\nimport CreationDialog from './CreationDialog';\r\nimport SpeedDial from '@mui/material/SpeedDial';\r\nimport SpeedDialIcon from '@mui/material/SpeedDialIcon';\r\nimport SpeedDialAction from '@mui/material/SpeedDialAction';\r\nimport FileCopyIcon from '@mui/icons-material/FileCopyOutlined';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\n\r\n\r\nconst actions = [\r\n  { icon: <FileCopyIcon />, name: 'Copy' },\r\n  { icon: <SaveIcon />, name: 'Save' },\r\n  { icon: <PrintIcon />, name: 'Print' },\r\n  { icon: <ShareIcon />, name: 'Share' },\r\n];\r\n\r\n\r\nconst StyledSpeedDial = styled(SpeedDial)(({ theme }) => ({\r\n  position: 'absolute',\r\n  '&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  '&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight': {\r\n    top: theme.spacing(2),\r\n    left: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n\r\nconst ConferenceCall = () => {\r\n  const [spacing, setSpacing] = React.useState(12);\r\n  const [number, setNumber] = useState('');\r\n  const [reload, setReload] = useState(false);\r\n  const [dlgOpen, setDlgOpen] = useState(false);\r\n\r\n  const agentState = [\"Online\", \"Idle\", \"Invisible\"]\r\n\r\n  const [agentStatus, setAgentStatus] = React.useState('Online');\r\n\r\n  const handleChange = (event) => {\r\n    setAgentStatus(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Conference Call</h1>\r\n      <Stack spacing={2}>\r\n        <Stack direction=\"row\">\r\n          <Button variant=\"contained\" startIcon={<AddIcon />} onClick={() => setDlgOpen(true)}>\r\n            New Conference\r\n          </Button>\r\n          {/* <Box sx={{ transform: 'translateZ(0px)', flexGrow: 1 }}>\r\n            <StyledSpeedDial\r\n              ariaLabel=\"SpeedDial basic example\"\r\n              sx={{ position: 'absolute', top: 0, right: 16 }}\r\n              icon={<SpeedDialIcon />}\r\n              direction={\"down\"}\r\n            >\r\n              {actions.map((action) => (\r\n                <SpeedDialAction\r\n                  key={action.name}\r\n                  icon={action.icon}\r\n                  tooltipTitle={action.name}\r\n                />\r\n              ))}\r\n            </StyledSpeedDial>\r\n          </Box> */}\r\n        </Stack>\r\n        <HistoryTable />\r\n        <CreationDialog isOpen={dlgOpen} setOpen={setDlgOpen} agentStatus={agentStatus} />\r\n      </Stack>\r\n\r\n    </>\r\n  )\r\n}\r\nexport default ConferenceCall\r\n","import { Route, Routes } from 'react-router-dom';\r\nimport ConferenceCallView from './ConferenceCall';\r\nimport { ConferenceContextProvider } from '../../contexts/ConferenceContext';\r\n\r\n/**\r\n * Routes for \"Welcome\" view\r\n * url: / || /welcome/*\r\n */\r\nconst CallRoutes = () => {\r\n  return (\r\n    <ConferenceContextProvider>\r\n      <Routes>\r\n        <Route path=\"/\" element={<ConferenceCallView />} />\r\n      </Routes>\r\n    </ConferenceContextProvider>\r\n  );\r\n};\r\n\r\nexport default CallRoutes;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4H8c-1.1 0-1.99.9-1.99 2L6 21c0 1.1.89 2 1.99 2H19c1.1 0 2-.9 2-2V11l-6-6zM8 21V7h6v5h5v9H8z\"\n}), 'FileCopyOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\"\n}), 'Print');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z\"\n}), 'Share');\n\nexports.default = _default;"],"names":["token","endpoint","process","REACT_APP_MULTIPASS","nameFirst","nameLast","phone","email","setAuthToken","api","get","res","status","data","log","warn","error","undefined","props","useAppStore","state","sx","p","display","alignItems","width","variant","currentUser","ml","flex","placeholder","inputProps","value","phoneNumber","onChange","e","handlePhoneNumber","target","m","color","disabled","length","onClick","handleDialing","mr","Counter","getReturnValues","countDown","Math","floor","countDownDate","timestamp","useState","setCountDown","useEffect","interval","setInterval","current","Date","getTime","clearInterval","useCountdown","hours","minutes","seconds","className","BootstrapDialog","styled","Dialog","theme","padding","spacing","BootstrapDialogTitle","children","onClose","other","DialogTitle","IconButton","position","right","top","palette","grey","Close","displayDial","setDisplayDial","topMarketerNumber","setTopMarketerNumber","names","setNames","isAdded","setIsAdded","handleClose","handleAdd","post","PhoneNumber","SessionID","id","getClients","loadToken","clients","console","style","height","marginTop","justifyContent","direction","Avatar","src","avatar_image","name","user","isCallStarted","marginBottom","Fab","Add","endCall","Call","open","minWidth","DialogContent","dividers","FormControl","size","InputLabel","Select","labelId","label","event","map","MenuItem","_id","TextField","InputProps","readOnly","DialogActions","autoFocus","onClickNumber","number","alpha","item","container","rowSpacing","row","index","xs","useNavigate","useLocation","isCalling","setIsCalling","useCall","isCallingState","setIsCallingState","call","setCall","device","setDevice","gatewayNumber","twilioToken","useSocket","deviceReady","setDeviceReady","startUpClient","setDialNumber","getFetch","addDeviceListeners","register","err","initializeDevice","accessToken","Device","logLevel","codecPreferences","on","message","handleIncomingCall","audio","updateAllAudioDevices","bind","isOutputSelectionSupported","parameters","From","updateDevices","speakerDevices","ringtoneDevices","selectEl","selectedDevices","availableOutputDevices","forEach","deviceId","makeOutgoingCall","params","To","connect","twilioCall","registerCallEvents","remoteStream","handleReplied","handleEndCall","setCalling","disconnect","triggerReload","Stack","CallFrom","CallingPad","CallInput","DialButton","dialNumber","Transition","React","ref","Slide","Box","MeetingDialog","setNumber","setReload","setOpen","fullScreen","isOpen","TransitionComponent","AppBar","Toolbar","Typography","component","roomid","Button","flexGrow","borderTop","borderLeft","borderColor","borderRight","borderBottom","users","sm","md","lg","minHeight","AutoDial","num","ConferenceContext","ConferenceContextProvider","conferenceTable","setConferenceTable","Provider","useContext","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","headCell","align","sortDirection","TableSortLabel","active","property","visuallyHidden","EnhancedTableToolbar","pl","pr","bgcolor","primary","main","action","activatedOpacity","Tooltip","title","Delete","FilterList","Badge","border","background","paper","EnhancedTable","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","dlgOpen","setDlgOpen","selectedMeetingName","setSelectedMeetingName","useConference","meetingUsers","setMeetingUsers","selectedRoomID","setSelectedRoomID","init","tableData","handleJoin","part_users","emptyRows","max","Paper","mb","TableContainer","Table","newSelected","n","TableBody","slice","isItemSelected","indexOf","hover","tabIndex","selectedIndex","concat","handleClick","scope","starttime","duration","participants","online","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","getStyles","fontWeight","typography","fontWeightRegular","fontWeightMedium","CustomizedDialogs","useTheme","meetingTime","setMeetingTime","meetingName","setMeetingName","startTime","setStartTime","setParticipants","handleSave","clientIds","push","agency","type","InputLabelProps","shrink","multiple","split","input","OutlinedInput","renderValue","flexWrap","gap","Chip","Save","Print","Share","SpeedDial","bottom","left","agentStatus","startIcon","path","element","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}