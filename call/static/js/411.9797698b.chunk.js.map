{"version":3,"file":"static/js/411.9797698b.chunk.js","mappings":"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","sources":["api/info/get.js","views/Users/Customer.js","views/Users/Agent.js","views/Users/EditDialog.js","views/Users/Prospect.js","views/Users/index.js"],"sourcesContent":["import { api } from '..';\r\nimport setAuthToken from '../setAuthToken';\r\n\r\nexport async function get(token, endpoint) {\r\n  // Dummy object, development only\r\n  if (process.env.REACT_APP_MULTIPASS)\r\n    return {\r\n      nameFirst: 'Leeloo',\r\n      nameLast: 'Dallas',\r\n      phone: '+1234567890',\r\n      email: 'Leeloo.Dallas@Multipass.com',\r\n    };\r\n\r\n  try {\r\n    setAuthToken(token);\r\n    const res = await api?.axios?.get(endpoint);\r\n    if (res?.status === 200) {\r\n      const { data } = res;\r\n      log.warn(`${token} -`, data);\r\n      return data;\r\n    }\r\n  } catch (error) {\r\n    log.error(`${token} -`, error);\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport default get;\r\n","import { Button } from '@mui/material'\r\nimport { forwardRef } from 'react'\r\nimport React, { useEffect, useState, useMemo } from 'react'\r\nimport MaterialTable from \"material-table\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst Customer = () => {\r\n  const [selectedRow, setSelectedRow] = useState(null)\r\n  const [data, setData] = useState([\r\n    {\r\n      name: \"Mehmet\",\r\n      last_name: \"Baran\",\r\n      phone: 1987,\r\n      office: 63,\r\n      fax: \"1987\",\r\n      email: \"hello@mail.com\",\r\n      npn: 13215,\r\n      street: \"Baker\",\r\n      city: \"Los Angeles\",\r\n      state: \"Florida\",\r\n      zip: \"+3243\",\r\n      website: \"https://example.com/\",\r\n      planName: \"hello\",\r\n      paidAmount: \"hello\",\r\n      transId: \"hello\",\r\n      receiptLink: \"hello\",\r\n      cardLast4: \"hello\",\r\n      cardBrand: \"hello\",\r\n    },\r\n    {\r\n      name: \"Baran\",\r\n      last_name: \"Mahmet\",\r\n      phone: 2865,\r\n      office: 63,\r\n      fax: \"1987\",\r\n      email: \"hello@mail.com\",\r\n      npn: 13215,\r\n      street: \"Baker\",\r\n      city: \"Los Angeles\",\r\n      state: \"Florida\",\r\n      zip: \"+3243\",\r\n      website: \"https://example.com\",\r\n      planName: \"hello\",\r\n      paidAmount: \"hello\",\r\n      transId: \"hello\",\r\n      receiptLink: \"hello\",\r\n      cardLast4: \"hello\",\r\n      cardBrand: \"hello\",\r\n    },\r\n  ]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <div style={{ maxWidth: \"100%\" }}>\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          editable={{\r\n            onRowAdd: newData =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setData([...data, newData]);\r\n\r\n                  resolve();\r\n                }, 1000)\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000)\r\n              }),\r\n            onRowDelete: oldData =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setData([...dataDelete]);\r\n\r\n                  resolve()\r\n                }, 1000)\r\n              }),\r\n          }}\r\n          columns={[\r\n            { title: \"Name\", field: \"name\", width: \"10%\" },\r\n            { title: \"Email\", field: \"email\", width: \"10%\" },\r\n            { title: \"Phone\", field: \"phone\", type: \"numeric\", width: \"10%\" },\r\n            { title: \"Prospect Type\", field: \"prospectType\", width: \"10%\" },\r\n            { title: \"Location\", field: \"location\", width: \"10%\" },\r\n            { title: \"Street\", field: \"street\", width: \"10%\" },\r\n            { title: \"Gender\", field: \"gender\", width: \"10%\" },\r\n            { title: \"Birthday\", field: \"birthday\", width: \"10%\" },\r\n            { title: \"Height\", field: \"height\", width: \"10%\" },\r\n            { title: \"weight\", field: \"weight\", width: \"10%\" },\r\n            { title: \"Tobacco\", field: \"tobacco\", width: \"10%\" },\r\n            { title: \"Relation\", field: \"relation\", width: \"10%\" },\r\n            // {\r\n            //   title: \"Doğum Yeri\",\r\n            //   field: \"birthCity\",\r\n            //   lookup: { 34: \"İstanbul\", 63: \"Şanlıurfa\" },\r\n            // },\r\n          ]}\r\n          data={data}\r\n          detailPanel={[\r\n            {\r\n              tooltip: 'Show Payment Info',\r\n              render: rowData => {\r\n                return (\r\n                  // <div\r\n                  //   style={{\r\n                  //     fontSize: 100,\r\n                  //     textAlign: 'center',\r\n                  //     color: 'white',\r\n                  //     backgroundColor: '#43A047',\r\n                  //   }}\r\n                  // >\r\n                  //   {rowData.planName}\r\n                  // </div>\r\n                  <div style={{\r\n                    marginLeft: 100\r\n                  }}>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                      Payment Details\r\n                    </Typography>\r\n                    <Table size=\"small\" aria-label=\"purchases\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Plan Name</TableCell>\r\n                          <TableCell>Paid Amount</TableCell>\r\n                          <TableCell align=\"center\">Trans ID</TableCell>\r\n                          <TableCell align=\"center\">Receipt Link</TableCell>\r\n                          <TableCell align=\"center\">Card Last 4</TableCell>\r\n                          <TableCell align=\"center\">Card Brand</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {rowData.planName}\r\n                          </TableCell>\r\n                          <TableCell>{rowData.paidAmount}</TableCell>\r\n                          <TableCell align=\"center\">{rowData.transId}</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {rowData.receiptLink}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {rowData.cardLast4}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {rowData.cardBrand}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </div>\r\n                )\r\n              },\r\n            }\r\n          ]}\r\n          onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))}\r\n          options={{\r\n            selection: true,\r\n            actionsColumnIndex: 0,\r\n            sorting: true,\r\n            pageSize: 20,\r\n            pageSizeOptions: [20, 50, 100],\r\n            maxBodyHeight: '70vh',\r\n            // rowStyle: rowData => ({\r\n            //   backgroundColor: (selectedRow === rowData.tableData.id) ? '#EEE' : '#FFF'\r\n            // })\r\n          }}\r\n          actions={[\r\n            {\r\n              tooltip: 'Remove All Selected Users',\r\n              icon: () => <DeleteOutline />,\r\n              onClick: (evt, data) => alert('You want to delete ' + data.length + ' rows')\r\n            }\r\n          ]}\r\n          title=\"Customer List\"\r\n        />\r\n      </div>\r\n      {/* <Button\r\n        onClick={() => {\r\n          openDialog({\r\n            title: intl.formatMessage({\r\n              id: 'dialog_title',\r\n              defaultMessage: 'Dialog title',\r\n            }),\r\n            message: intl.formatMessage({\r\n              id: 'dialog_message',\r\n              defaultMessage:\r\n                'Dialog message. You can put as much text as you want here. Ask a question or show a warning before deleting something. You can also set the action text to something like \"YES, Delete\" and run that action by passing a \"handleAction\" prop. This receives a \"handleClose\" callback with which you can close the dialog when your action is done.',\r\n            }),\r\n            action: intl.formatMessage({\r\n              id: 'dialog_action',\r\n              defaultMessage: 'YES, Delete',\r\n            }),\r\n            handleAction: (handleClose) => {\r\n              setProcessing(true)\r\n              console.log('Doing some async stuff')\r\n\r\n              setTimeout(() => {\r\n                console.log('finished async stuff')\r\n                //Do some stuff and then\r\n                handleClose()\r\n              }, 3000)\r\n            },\r\n          })\r\n        }}\r\n      >\r\n        OPEN DIALOG\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\nexport default Customer\r\n","import { Button } from '@mui/material'\r\nimport { forwardRef } from 'react'\r\nimport React, { useEffect, useState, useMemo } from 'react'\r\nimport MaterialTable from \"material-table\";\r\nimport get from '../../api/info/get';\r\nimport { isUserStillLoggedIn, loadToken } from '../../api/auth/utils';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst Agent = () => {\r\n  const [selectedRow, setSelectedRow] = useState(null)\r\n  const [data, setData] = useState([\r\n    {\r\n      first_name: \"Mehmet\",\r\n      last_name: \"Baran\",\r\n      phone: 1987,\r\n      office: 63,\r\n      fax: \"1987\",\r\n      email: \"hello@mail.com\",\r\n      npn: 13215,\r\n      street: \"Baker\",\r\n      city: \"Los Angeles\",\r\n      state: \"Florida\",\r\n      zip: \"+3243\",\r\n      website: \"https://example.com/\",\r\n      planName: \"hello\",\r\n      paidAmount: \"hello\",\r\n      transId: \"hello\",\r\n      receiptLink: \"hello\",\r\n      cardLast4: \"hello\",\r\n      cardBrand: \"hello\",\r\n    },\r\n    {\r\n      first_name: \"Baran\",\r\n      last_name: \"Mahmet\",\r\n      phone: 2865,\r\n      office: 63,\r\n      fax: \"1987\",\r\n      email: \"hello@mail.com\",\r\n      npn: 13215,\r\n      street: \"Baker\",\r\n      city: \"Los Angeles\",\r\n      state: \"Florida\",\r\n      zip: \"+3243\",\r\n      website: \"https://example.com\",\r\n      planName: \"hello\",\r\n      paidAmount: \"hello\",\r\n      transId: \"hello\",\r\n      receiptLink: \"hello\",\r\n      cardLast4: \"hello\",\r\n      cardBrand: \"hello\",\r\n    },\r\n  ]);\r\n\r\n  // useEffect(() => {\r\n  //   const init = async () => {\r\n  //     const clients = await get(loadToken(), \"api/clients\");\r\n  //     console.log(\"init : \", clients);\r\n  //     setData(clients);\r\n  //   }\r\n\r\n  //   init()\r\n  // }, [])\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <div style={{ maxWidth: \"100%\" }}>\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          editable={{\r\n            onRowAdd: newData =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setData([...data, newData]);\r\n\r\n                  resolve();\r\n                }, 1000)\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000)\r\n              }),\r\n            onRowDelete: oldData =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setData([...dataDelete]);\r\n\r\n                  resolve()\r\n                }, 1000)\r\n              }),\r\n          }}\r\n          columns={[\r\n            { title: \"First Name\", field: \"first_name\", width: \"10%\" },\r\n            { title: \"Last Name\", field: \"last_name\", width: \"10%\" },\r\n            { title: \"Phone\", field: \"phone\", type: \"numeric\", width: \"10%\" },\r\n            // { title: \"Office\", field: \"office\", width: \"10%\" },\r\n            // { title: \"Fax\", field: \"fax\", width: \"10%\" },\r\n            { title: \"Email\", field: \"email\", width: \"10%\" },\r\n            { title: \"Npn\", field: \"npn\", type: \"numeric\", width: \"10%\" },\r\n            { title: \"Street\", field: \"street\", width: \"10%\" },\r\n            { title: \"City\", field: \"city\", width: \"10%\" },\r\n            { title: \"State\", field: \"state\", width: \"10%\" },\r\n            { title: \"Zip\", field: \"zip\", width: \"10%\" },\r\n            { title: \"Website\", field: \"website\", width: \"10%\" },\r\n            // {\r\n            //   title: \"Doğum Yeri\",\r\n            //   field: \"birthCity\",\r\n            //   lookup: { 34: \"İstanbul\", 63: \"Şanlıurfa\" },\r\n            // },\r\n          ]}\r\n          data={data}\r\n          detailPanel={[\r\n            {\r\n              tooltip: 'Show Payment Info',\r\n              render: rowData => {\r\n                return (\r\n                  // <div\r\n                  //   style={{\r\n                  //     fontSize: 100,\r\n                  //     textAlign: 'center',\r\n                  //     color: 'white',\r\n                  //     backgroundColor: '#43A047',\r\n                  //   }}\r\n                  // >\r\n                  //   {rowData.planName}\r\n                  // </div>\r\n                  <div style={{\r\n                    marginLeft: 100\r\n                  }}>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                      Payment Details\r\n                    </Typography>\r\n                    <Table size=\"small\" aria-label=\"purchases\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Plan Name</TableCell>\r\n                          <TableCell>Paid Amount</TableCell>\r\n                          <TableCell align=\"center\">Trans ID</TableCell>\r\n                          <TableCell align=\"center\">Receipt Link</TableCell>\r\n                          <TableCell align=\"center\">Card Last 4</TableCell>\r\n                          <TableCell align=\"center\">Card Brand</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {rowData.planName}\r\n                          </TableCell>\r\n                          <TableCell>{rowData.paidAmount}</TableCell>\r\n                          <TableCell align=\"center\">{rowData.transId}</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {rowData.receiptLink}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {rowData.cardLast4}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {rowData.cardBrand}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </div>\r\n                )\r\n              },\r\n            }\r\n          ]}\r\n          onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))}\r\n          options={{\r\n            selection: true,\r\n            actionsColumnIndex: 0,\r\n            sorting: true,\r\n            pageSize: 20,\r\n            pageSizeOptions: [20, 50, 100],\r\n            maxBodyHeight: '70vh',\r\n            // rowStyle: rowData => ({\r\n            //   backgroundColor: (selectedRow === rowData.tableData.id) ? '#EEE' : '#FFF'\r\n            // })\r\n          }}\r\n          actions={[\r\n            {\r\n              tooltip: 'Remove All Selected Users',\r\n              icon: () => <DeleteOutline />,\r\n              onClick: (evt, data) => alert('You want to delete ' + data.length + ' rows')\r\n            }\r\n          ]}\r\n          title=\"Agent List\"\r\n        />\r\n      </div>\r\n      {/* <Button\r\n        onClick={() => {\r\n          openDialog({\r\n            title: intl.formatMessage({\r\n              id: 'dialog_title',\r\n              defaultMessage: 'Dialog title',\r\n            }),\r\n            message: intl.formatMessage({\r\n              id: 'dialog_message',\r\n              defaultMessage:\r\n                'Dialog message. You can put as much text as you want here. Ask a question or show a warning before deleting something. You can also set the action text to something like \"YES, Delete\" and run that action by passing a \"handleAction\" prop. This receives a \"handleClose\" callback with which you can close the dialog when your action is done.',\r\n            }),\r\n            action: intl.formatMessage({\r\n              id: 'dialog_action',\r\n              defaultMessage: 'YES, Delete',\r\n            }),\r\n            handleAction: (handleClose) => {\r\n              setProcessing(true)\r\n              console.log('Doing some async stuff')\r\n\r\n              setTimeout(() => {\r\n                console.log('finished async stuff')\r\n                //Do some stuff and then\r\n                handleClose()\r\n              }, 3000)\r\n            },\r\n          })\r\n        }}\r\n      >\r\n        OPEN DIALOG\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\nexport default Agent\r\n","import React, { useEffect, useState, useMemo } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Chip from '@mui/material/Chip';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Box from '@mui/material/Box';\r\nimport { useAppStore } from '../../store/AppStore';\r\nimport { loadToken } from '../../api/auth/utils';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n        padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction BootstrapDialogTitle(props) {\r\n    const { children, onClose, ...other } = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: 8,\r\n                        top: 8,\r\n                        color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </DialogTitle>\r\n    );\r\n}\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst names = [\r\n    'Oliver Hansen',\r\n    'Van Henry',\r\n    'April Tucker',\r\n    'Ralph Hubbard',\r\n    'Omar Alexander',\r\n    'Carlos Abbott',\r\n    'Miriam Wagner',\r\n    'Bradley Wilkerson',\r\n    'Virginia Andrews',\r\n    'Kelly Snyder',\r\n];\r\n\r\n\r\nfunction getStyles(name, participants, theme) {\r\n\r\n    return {\r\n        fontWeight:\r\n            participants.indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\nexport default function CustomizedDialogs(props) {\r\n    const [state, dispatch] = useAppStore();\r\n    const theme = useTheme();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [meetingTime, setMeetingTime] = useState(30);\r\n    const [meetingName, setMeetingName] = useState('Conference 1');\r\n    const [startTime, setStartTime] = useState(\"2022-11-10T10:30\");\r\n    const availableTime = [15, 30, 45, 60, 90];\r\n    const [participants, setParticipants] = React.useState([]);\r\n    const [names, setNames] = useState([]);\r\n\r\n    var dataArray = [];\r\n    console.log(\"Dialog Data\", props.data);\r\n    console.log(\"Dialog Data\", Object.keys(props.data || {}).length);\r\n    if (Object.keys(props.data || {}).length > 0) {\r\n        Object.keys(props.data).forEach(function (key) {\r\n            dataArray.push(props.data[key]);\r\n        });\r\n    }\r\n    console.log(\"Dialog Data\", dataArray);\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setParticipants(\r\n            // On autofill we get a stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const handleClose = () => {\r\n        console.log(startTime)\r\n        props.setOpen(false);\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        // let clientIds = [];\r\n        // participants.map((item) => {\r\n        //     clientIds.push({ user: item._id });\r\n        // });\r\n        // const res = await post(\"api/conferences\", {\r\n        //     agency: state.currentUser.id,\r\n        //     name: meetingName,\r\n        //     starttime: startTime,\r\n        //     duration: meetingTime,\r\n        //     participants: clientIds\r\n        // })\r\n        // console.log(res);\r\n\r\n        // setParticipants([]);\r\n        // setConferenceTable([...conferenceTable, res]);\r\n        props.setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <BootstrapDialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={props.isOpen}\r\n                sx={{ minWidth: 500 }}\r\n            >\r\n                <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose} sx={{ minWidth: 500 }}>\r\n                    {props.data?.name}\r\n                </BootstrapDialogTitle>\r\n                <DialogContent dividers>\r\n                    {dataArray?.map((item, index) => (\r\n                        <Stack key={index} spacing={3}>\r\n                            <Stack spacing={3}>\r\n                                <TextField\r\n                                    id=\"datetime-local\"\r\n                                    label=\"Name\"\r\n                                    type=\"text\"\r\n                                    value={item}\r\n                                    // onChange={(e) => setMeetingName(e.target.value)}\r\n                                    sx={{ width: 250 }}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </Stack>\r\n                            {/* <Stack direction=\"row\" spacing={2}>\r\n                            <TextField\r\n                                id=\"datetime-local\"\r\n                                label=\"Start Time\"\r\n                                type=\"datetime-local\"\r\n                                value={startTime}\r\n                                onChange={(e) => setStartTime(e.target.value)}\r\n                                sx={{ width: 250 }}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Stack> */}\r\n                        </Stack>\r\n                    ))}\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={props.handleSave}>\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </BootstrapDialog>\r\n        </div>\r\n    );\r\n}","import { Button } from '@mui/material'\r\nimport { forwardRef } from 'react'\r\nimport React, { useEffect, useState, useMemo } from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport MaterialTable from \"material-table\";\r\nimport get from '../../api/info/get';\r\nimport post from '../../api/auth/post';\r\nimport { isUserStillLoggedIn, loadToken } from '../../api/auth/utils';\r\nimport EditDialog from './EditDialog';\r\n\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst Prospect = () => {\r\n  const [selectedRow, setSelectedRow] = useState(null)\r\n  const [data, setData] = useState([]);\r\n  const [showDetailDialog, setShowDetailDialog] = useState(false);\r\n  const [detailData, setDetailData] = useState();\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const clients = await get(loadToken(), \"api/clients\");\r\n      console.log(\"init : \", clients);\r\n      setData(clients);\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  const handleClickRow = (selectedRow) => {\r\n    setSelectedRow(selectedRow.tableData.id);\r\n    setDetailData(selectedRow);\r\n    setShowDetailDialog(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <div style={{ maxWidth: \"100%\" }}>\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          editable={{\r\n            onRowAdd: newData =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setData([...data, newData]);\r\n\r\n                  resolve();\r\n                }, 1000)\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000)\r\n              }),\r\n            onRowDelete: oldData =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setData([...dataDelete]);\r\n\r\n                  resolve()\r\n                }, 1000)\r\n              }),\r\n          }}\r\n          columns={[\r\n            { title: \"Name\", field: \"name\", width: \"10%\" },\r\n            { title: \"Email\", field: \"email\", width: \"10%\" },\r\n            { title: \"Phone\", field: \"phone\", type: \"numeric\", width: \"10%\" },\r\n            { title: \"Type\", field: \"type\", width: \"10%\" },\r\n            { title: \"Location\", field: \"location\", width: \"10%\" },\r\n            { title: \"Street\", field: \"street\", width: \"10%\" },\r\n            { title: \"Gender\", field: \"gender\", width: \"10%\" },\r\n            { title: \"Birth\", field: \"birth\", width: \"10%\" },\r\n            { title: \"Height\", field: \"height\", type: \"numeric\", width: \"10%\" },\r\n            { title: \"Weight\", field: \"weight\", type: \"numeric\", width: \"10%\" },\r\n            { title: \"Tobacco\", field: \"tobacco\", width: \"10%\" },\r\n            { title: \"Relation\", field: \"relation\", width: \"10%\" },\r\n            // {\r\n            //   title: \"Doğum Yeri\",\r\n            //   field: \"birthCity\",\r\n            //   lookup: { 34: \"İstanbul\", 63: \"Şanlıurfa\" },\r\n            // },\r\n          ]}\r\n          data={data}\r\n          detailPanel={[\r\n            {\r\n              tooltip: 'Show Payment Info',\r\n              render: rowData => {\r\n                return (\r\n                  // <div\r\n                  //   style={{\r\n                  //     fontSize: 100,\r\n                  //     textAlign: 'center',\r\n                  //     color: 'white',\r\n                  //     backgroundColor: '#43A047',\r\n                  //   }}\r\n                  // >\r\n                  //   {rowData.planName}\r\n                  // </div>\r\n                  <div style={{\r\n                    marginLeft: 100\r\n                  }}>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                      Details\r\n                    </Typography>\r\n                    <Table size=\"small\" aria-label=\"purchases\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Martial Status</TableCell>\r\n                          <TableCell>Preexisting Conditions</TableCell>\r\n                          <TableCell align=\"center\">Type of Condition</TableCell>\r\n                          <TableCell align=\"center\">People in Household</TableCell>\r\n                          <TableCell align=\"center\">Annual Income</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {rowData.planName}\r\n                          </TableCell>\r\n                          <TableCell>{rowData.paidAmount}</TableCell>\r\n                          <TableCell align=\"center\">{rowData.transId}</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {rowData.receiptLink}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {rowData.cardLast4}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                    <br />\r\n                    <Table size=\"small\" aria-label=\"purchases\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Self Employed</TableCell>\r\n                          <TableCell>Qualifying Life Event</TableCell>\r\n                          <TableCell align=\"center\">ExpectantParent</TableCell>\r\n                          <TableCell align=\"center\">Medications</TableCell>\r\n                          <TableCell align=\"center\">Health of Condition</TableCell>\r\n                          <TableCell align=\"center\">Denied Coverage</TableCell>\r\n                          <TableCell align=\"center\">Treated By Physician</TableCell>\r\n                          <TableCell align=\"center\">Plan Types</TableCell>\r\n                          <TableCell align=\"center\">Optional Coverage</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {rowData.planName}\r\n                          </TableCell>\r\n                          <TableCell>{rowData.paidAmount}</TableCell>\r\n                          <TableCell align=\"center\">{rowData.transId}</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {rowData.receiptLink}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {rowData.cardLast4}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {rowData.cardBrand}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                    <br />\r\n                    <Table size=\"small\" aria-label=\"purchases\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Current Insured</TableCell>\r\n                          <TableCell>Policy Expires</TableCell>\r\n                          <TableCell align=\"center\">Covered for</TableCell>\r\n                          <TableCell align=\"center\">Current Provider</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {rowData.planName}\r\n                          </TableCell>\r\n                          <TableCell>{rowData.paidAmount}</TableCell>\r\n                          <TableCell align=\"center\">{rowData.transId}</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {rowData.receiptLink}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {rowData.cardLast4}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {rowData.cardBrand}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                    <br />\r\n                    <Table size=\"small\" aria-label=\"purchases\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">Type</TableCell>\r\n                          <TableCell align=\"center\">Roles</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">{rowData.transId}</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {rowData.receiptLink}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </div>\r\n                )\r\n              },\r\n            }\r\n          ]}\r\n          onRowClick={((evt, selectedRow) => handleClickRow(selectedRow))}\r\n          options={{\r\n            selection: true,\r\n            actionsColumnIndex: 0,\r\n            sorting: true,\r\n            pageSize: 20,\r\n            pageSizeOptions: [20, 50, 100],\r\n            maxBodyHeight: '70vh',\r\n            // rowStyle: rowData => ({\r\n            //   backgroundColor: (selectedRow === rowData.tableData.id) ? '#EEE' : '#FFF'\r\n            // })\r\n          }}\r\n          actions={[\r\n            {\r\n              tooltip: 'Remove All Selected Users',\r\n              icon: () => <DeleteOutline />,\r\n              onClick: (evt, data) => alert('You want to delete ' + data.length + ' rows')\r\n            }\r\n          ]}\r\n          title=\"Prospect List\"\r\n        />\r\n      </div>\r\n      <EditDialog isOpen={showDetailDialog} setOpen={setShowDetailDialog} data={detailData} />\r\n    </>\r\n  )\r\n}\r\nexport default Prospect\r\n","import { Route, Routes } from 'react-router-dom';\r\nimport UsersView from './Users';\r\nimport CustomerView from './Customer';\r\nimport AgentView from './Agent';\r\nimport ProspectView from './Prospect';\r\n\r\n/**\r\n * Routes for \"Welcome\" view\r\n * url: / || /welcome/*\r\n */\r\nconst UsersRoutes = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/customers\" element={<CustomerView />} />\r\n      <Route path=\"/\" element={<ProspectView />} />\r\n      <Route path=\"/prospects\" element={<ProspectView />} />\r\n      <Route path=\"/agents\" element={<AgentView />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default UsersRoutes;"],"names":["token","endpoint","process","REACT_APP_MULTIPASS","nameFirst","nameLast","phone","email","setAuthToken","api","get","res","status","data","log","warn","error","undefined","tableIcons","Add","forwardRef","props","ref","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","useState","setSelectedRow","name","last_name","office","fax","npn","street","city","state","zip","website","planName","paidAmount","transId","receiptLink","cardLast4","cardBrand","setData","style","maxWidth","icons","editable","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","tableData","id","onRowDelete","dataDelete","index","splice","columns","title","field","width","type","detailPanel","tooltip","render","rowData","marginLeft","variant","gutterBottom","component","Table","size","TableHead","TableRow","TableCell","align","TableBody","scope","onRowClick","evt","selectedRow","options","selection","actionsColumnIndex","sorting","pageSize","pageSizeOptions","maxBodyHeight","actions","icon","onClick","alert","length","first_name","BootstrapDialog","styled","Dialog","theme","padding","spacing","BootstrapDialogTitle","children","onClose","other","DialogTitle","sx","m","p","IconButton","position","right","top","color","palette","grey","Close","CustomizedDialogs","useAppStore","useTheme","React","startTime","dataArray","console","Object","keys","forEach","key","push","handleClose","setOpen","open","isOpen","minWidth","DialogContent","dividers","map","item","Stack","TextField","label","value","InputLabelProps","shrink","DialogActions","Button","autoFocus","handleSave","showDetailDialog","setShowDetailDialog","detailData","setDetailData","useEffect","init","loadToken","clients","handleClickRow","path","element"],"sourceRoot":""}