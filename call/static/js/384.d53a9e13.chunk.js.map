{"version":3,"file":"static/js/384.d53a9e13.chunk.js","mappings":"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","sources":["api/info/get.js","components/DialPad/CallFrom.js","components/DialPad/CallInput.js","components/DialPad/CountDown.js","components/DialPad/CallingPad.js","components/DialPad/DialButton.js","components/DialPad/index.js","components/ContactList/index.js","components/CallHistory/index.js","views/Call/Call.js","views/Call/index.js"],"sourcesContent":["import { api } from '..';\r\nimport setAuthToken from '../setAuthToken';\r\n\r\nexport async function get(token, endpoint) {\r\n  // Dummy object, development only\r\n  if (process.env.REACT_APP_MULTIPASS)\r\n    return {\r\n      nameFirst: 'Leeloo',\r\n      nameLast: 'Dallas',\r\n      phone: '+1234567890',\r\n      email: 'Leeloo.Dallas@Multipass.com',\r\n    };\r\n\r\n  try {\r\n    setAuthToken(token);\r\n    const res = await api?.axios?.get(endpoint);\r\n    if (res?.status === 200) {\r\n      const { data } = res;\r\n      log.warn(`${token} -`, data);\r\n      return data;\r\n    }\r\n  } catch (error) {\r\n    log.error(`${token} -`, error);\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport default get;\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Button from '@mui/material/Button';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport Fab from '@mui/material/Fab';\r\nimport DirectionsIcon from '@mui/icons-material/Directions';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport { useAppStore } from '../../store/AppStore';\r\n\r\nconst CallFrom = (props) => {\r\n  const [state, dispatch] = useAppStore();\r\n\r\n  return (\r\n    <Paper\r\n      sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: \"100%\" }}\r\n    >\r\n      <Stack>\r\n        <Typography variant=\"h6\">\r\n          Call as\r\n        </Typography>\r\n        <Typography variant=\"button\">\r\n          {state.currentUser?.phone}\r\n        </Typography>\r\n      </Stack>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default CallFrom\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Button from '@mui/material/Button';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport Fab from '@mui/material/Fab';\r\nimport DirectionsIcon from '@mui/icons-material/Directions';\r\n\r\nconst CallInput = (props) => {\r\n\r\n  return (\r\n    <Paper\r\n      sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: \"100%\" }}\r\n    >\r\n      <InputBase\r\n        sx={{ ml: 1, flex: 1 }}\r\n        placeholder=\"Enter a name or number\"\r\n        inputProps={{ 'aria-label': 'enter a name or number' }}\r\n        value={props.phoneNumber}\r\n        onChange={(e) => {\r\n          props.handlePhoneNumber(e.target.value)\r\n        }}\r\n      />\r\n      <Fab variant=\"extended\" sx={{ p: '10px', m: 1 }} aria-label=\"call\" color=\"success\" disabled={props.phoneNumber.length == 0} onClick={() => { props.handleDialing(true) }}>\r\n        <CallIcon sx={{ mr: 2, ml: 2 }} />\r\n      </Fab>\r\n    </Paper >\r\n  )\r\n}\r\n\r\nexport default CallInput\r\n","import React from 'react'\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function Counter(props) {\r\n\r\n  const useCountdown = () => {\r\n    const countDownDate = props.timestamp;\r\n\r\n    const [countDown, setCountDown] = useState(0);\r\n\r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        const current = new Date().getTime() - countDownDate;\r\n        setCountDown(current);\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }, [countDownDate]);\r\n\r\n    return getReturnValues(countDown);\r\n  };\r\n\r\n  const getReturnValues = (countDown) => {\r\n    // calculate time left\r\n    const days = Math.floor(countDown / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor(\r\n      (countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n    );\r\n    const minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((countDown % (1000 * 60)) / 1000);\r\n\r\n    return [days, hours, minutes, seconds];\r\n  };\r\n\r\n  const [days, hours, minutes, seconds] = useCountdown();\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"time-1\">{hours}</span>\r\n      <span className=\"time-2\"> : </span>\r\n      <span className=\"time-3\">{minutes}</span>\r\n      <span className=\"time-4\"> : </span>\r\n      <span className=\"time-5\">{seconds}</span>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport Scrollbar from 'material-ui-shell/lib/components/Scrollbar/Scrollbar'\r\nimport { useIntl } from 'react-intl'\r\nimport PropTypes from 'prop-types';\r\nimport { useLocale } from 'base-shell/lib/providers/Locale'\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Fab from '@mui/material/Fab';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport RecordVoiceOverIcon from '@mui/icons-material/RecordVoiceOver';\r\nimport DialpadTwoToneIcon from '@mui/icons-material/DialpadTwoTone';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport get from '../../api/info/get';\r\nimport {api} from '../../api';\r\nimport { useAppStore } from '../../store/AppStore';\r\nimport { loadToken } from '../../api/auth/utils';\r\nimport Counter from './CountDown';\r\nimport avatar_image from '../../assets/call_avatar.png';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\nimport SecondaryDialButton from './SecondaryDialButton';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2),\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction BootstrapDialogTitle(props) {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n}\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nconst CallingPad = (props) => {\r\n\r\n  const [displayDial, setDisplayDial] = useState(false);\r\n  const [topMarketerNumber, setTopMarketerNumber] = useState(\"\");\r\n  const [names, setNames] = useState([]);\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [state, dispatch] = useAppStore();\r\n\r\n  const handleDigit = (digit) => {\r\n    console.log(digit);\r\n    props.call?.sendDigits(digit);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setDisplayDial(false)\r\n  };\r\n\r\n  const handleAdd = async () => {\r\n    await api?.auth?.post('api/twilio/addUser', {\r\n      PhoneNumber: topMarketerNumber.phone,\r\n      SessionID: state.currentUser.id\r\n    });\r\n    // props.makeCall(topMarketerNumber.phone);\r\n    setIsAdded(true);\r\n    setDisplayDial(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getClients = async () => {\r\n      const clients = await get(loadToken(), \"api/clients\");\r\n      console.log(clients);\r\n      setNames(clients);\r\n    }\r\n\r\n    getClients();\r\n  }, [])\r\n\r\n  const handleChange = (event) => {\r\n    setTopMarketerNumber(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={3} style={{ width: \"80%\", height: \"100%\", marginTop: \"30%\" }} justifyContent=\"center\">\r\n      <Stack direction=\"row\" spacing={2} justifyContent=\"center\">\r\n        {\r\n          isAdded && <Stack>\r\n            <Stack spacing={3} justifyContent=\"center\" direction=\"row\">\r\n              <Avatar src={avatar_image} sx={{ width: 84, height: 84 }} />\r\n            </Stack>\r\n            <Stack spacing={3} justifyContent=\"center\" direction=\"row\">\r\n              <Typography variant=\"h6\">\r\n                {topMarketerNumber.name}\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n        }\r\n        <Stack>\r\n          <Stack spacing={3} justifyContent=\"center\" direction=\"row\">\r\n            <Avatar src={avatar_image} sx={{ width: 84, height: 84 }} />\r\n          </Stack>\r\n          <Stack spacing={3} justifyContent=\"center\" direction=\"row\">\r\n            <Typography variant=\"h6\">\r\n              {props.user}\r\n            </Typography>\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n      {!props.isCallStarted && (<Stack spacing={3} justifyContent=\"center\" direction=\"row\">\r\n        <Typography variant=\"h6\">\r\n          Calling...\r\n        </Typography>\r\n      </Stack>\r\n      )\r\n      }\r\n      {props.isCallStarted && (<Stack spacing={3} justifyContent=\"center\" direction=\"row\">\r\n        <Typography variant=\"h6\">\r\n          <Counter timestamp={props.timestamp} />\r\n        </Typography>\r\n      </Stack>\r\n      )\r\n      }\r\n      {/* {\r\n        displayDial && (<SecondaryDialButton onClickNumber={handleDigit} />)\r\n      } */}\r\n      <Stack spacing={3} justifyContent=\"center\" direction=\"row\" style={{ marginBottom: '20px' }}>\r\n        {/* <Fab aria-label=\"record\" color=\"primary\" onClick={() => props.record()}>\r\n          <RecordVoiceOverIcon sx={{ mr: 2, ml: 2 }} />\r\n        </Fab> */}\r\n        {props.isCallStarted && (\r\n          <>\r\n            {/* <Fab aria-label=\"call-end\" color=\"default\" onClick={() => setDisplayDial(!displayDial)}>\r\n              <DialpadTwoToneIcon sx={{ mr: 2, ml: 2 }} />\r\n            </Fab> */}\r\n            <Fab aria-label=\"call-end\" color=\"default\" onClick={() => setDisplayDial(!displayDial)}>\r\n              <AddIcon sx={{ mr: 2, ml: 2 }} />\r\n            </Fab>\r\n          </>\r\n        )\r\n        }\r\n        <Fab aria-label=\"call-end\" color=\"error\" onClick={() => props.endCall()}>\r\n          <CallIcon sx={{ mr: 2, ml: 2 }} />\r\n        </Fab>\r\n      </Stack>\r\n\r\n      <BootstrapDialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={displayDial}\r\n        sx={{ minWidth: 500 }}\r\n      >\r\n        <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose} sx={{ minWidth: 500 }}>\r\n          Add a new participant\r\n        </BootstrapDialogTitle>\r\n        <DialogContent dividers>\r\n          <Stack direction=\"row\" spacing={5} >\r\n            <FormControl sx={{ m: 1, minWidth: 200 }} size=\"small\">\r\n              <InputLabel id=\"demo-select-small\">Top marketer</InputLabel>\r\n              <Select\r\n                labelId=\"demo-select-small\"\r\n                id=\"demo-select-small\"\r\n                value={topMarketerNumber}\r\n                label=\"Top marketer\"\r\n                onChange={handleChange}\r\n              >\r\n                {names.map((name) => (\r\n                  <MenuItem\r\n                    key={name._id}\r\n                    value={name}\r\n                  >\r\n                    {name.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <TextField id=\"standard-basic\" label=\" \" variant=\"standard\" value={topMarketerNumber.phone}\r\n              InputProps={{\r\n                readOnly: true,\r\n              }} />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleAdd}>\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n    </Stack >\r\n  )\r\n}\r\n\r\nexport default CallingPad\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport Scrollbar from 'material-ui-shell/lib/components/Scrollbar/Scrollbar'\r\nimport { useIntl } from 'react-intl'\r\nimport { useLocale } from 'base-shell/lib/providers/Locale'\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Fab from '@mui/material/Fab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\nimport { NoBackpackSharp } from '@mui/icons-material';\r\n\r\nconst DialButton = (props) => {\r\n\r\n  const onClickNumber = props.onClickNumber;\r\n\r\n  const handleClick = (number) => {\r\n    onClickNumber(number);\r\n  }\r\n\r\n  const dialContent = [\r\n    [\r\n      { number: '1', alpha: \"\" },\r\n      { number: '2', alpha: \"a b c\" },\r\n      { number: '3', alpha: \"d e f\" },\r\n    ],\r\n    [\r\n      { number: '4', alpha: \"g h i\" },\r\n      { number: '5', alpha: \"j k l\" },\r\n      { number: '6', alpha: \"m n o\" },\r\n    ],\r\n    [\r\n      { number: '7', alpha: \"p q r s\" },\r\n      { number: '8', alpha: \"t u v\" },\r\n      { number: '9', alpha: \"w x y z\" },\r\n    ],\r\n    [\r\n      { number: '*', alpha: \"\" },\r\n      { number: '0', alpha: \"\" },\r\n      { number: '#', alpha: \"\" },\r\n    ]\r\n  ]\r\n\r\n  return (\r\n    <Stack spacing={3} style={{ width: \"80%\" }}>\r\n      {\r\n        dialContent.map((item) => (\r\n          <Stack direction=\"row\" spacing={0}>\r\n            <Grid container rowSpacing={0} >\r\n              {\r\n                item.map((row, index) => (\r\n                  <Grid item key={index} xs={4}>\r\n                    <Button variant=\"text\" color=\"info\" style={{ width: \"100%\" }} onClick={() => handleClick(row.number)}>\r\n                      <Stack spacing={0}>\r\n                        <Typography variant=\"h4\">\r\n                          {row.number}\r\n                        </Typography>\r\n                        {row.alpha === \"\" && (<Typography variant=\"button\">&nbsp;</Typography>)}\r\n                        {row.alpha !== \"\" && (<Typography variant=\"button\">{row.alpha}</Typography>)}\r\n                      </Stack>\r\n                    </Button>\r\n                  </Grid>\r\n                ))\r\n              }\r\n            </Grid>\r\n          </Stack>\r\n        ))\r\n      }\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default DialButton\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport Scrollbar from 'material-ui-shell/lib/components/Scrollbar/Scrollbar'\r\nimport { useNavigate, useLocation } from 'react-router-dom'\r\nimport { useIntl } from 'react-intl'\r\nimport { useLocale } from 'base-shell/lib/providers/Locale'\r\nimport Stack from '@mui/material/Stack';\r\nimport { Device } from '@twilio/voice-sdk'\r\nimport DialButton from \"./DialButton\";\r\nimport CallingPad from \"./CallingPad\";\r\nimport CallInput from \"./CallInput\";\r\nimport CallFrom from \"./CallFrom\";\r\nimport useCall from \"../../hooks/useCall\";\r\nimport useSocket from \"../../hooks/useSocket\";\r\n\r\nconst DialPad = (props) => {\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  // const [isCallStarted, setIsCallStarted] = useState(false);\r\n  const { isCallingState, setIsCallingState, setIsIncomingCall, call, setCall, device, setDevice, acceptIncomingCall,\r\n    rejectIncomingCall,\r\n    hangupIncomingCall,\r\n    handleDisconnectedIncomingCall,\r\n    isCalling, setIsCalling } = useCall();\r\n  const { twilioToken } = useSocket();\r\n\r\n  useEffect(() => {\r\n    if (twilioToken == null)\r\n      return;\r\n    console.log(props.dialNumber)\r\n    props.setDialNumber(props.dialNumber)\r\n    async function getFetch() {\r\n      await startUpClient()\r\n    }\r\n    getFetch()\r\n  }, [twilioToken])\r\n\r\n  useEffect(() => {\r\n    console.log('device useEffect:', device)\r\n    if (device) {\r\n      console.log('device:', device)\r\n      addDeviceListeners()\r\n      try {\r\n        console.log(\"device:\", device)\r\n        device.register()\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n\r\n    }\r\n  }, [device])\r\n\r\n  const startUpClient = async () => {\r\n    try {\r\n      console.log('Got a token.', twilioToken)\r\n      initializeDevice(twilioToken)\r\n    } catch (error) {\r\n      console.log(\r\n        'An error occurred. See your browser console for more information.'\r\n      )\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const initializeDevice = (accessToken) => {\r\n    console.log('Initializing device')\r\n    setDevice(\r\n      new Device(accessToken, {\r\n        logLevel: 1,\r\n        // Set Opus as our preferred codec. Opus generally performs better, requiring less bandwidth and\r\n        // providing better audio quality in restrained network conditions.\r\n        codecPreferences: ['opus', 'pcmu'],\r\n      })\r\n    )\r\n  }\r\n\r\n  const addDeviceListeners = () => {\r\n    device.on('registered', function () {\r\n      console.log('Twilio.Device Ready to make and receive calls!')\r\n      // callControlsDiv.classList.remove('hide')\r\n    })\r\n\r\n    device.on('error', function (error) {\r\n      console.log('Twilio.Device Error: ' + error.message)\r\n    })\r\n\r\n    device.on('incoming', handleIncomingCall)\r\n\r\n    device.audio.on('deviceChange', updateAllAudioDevices.bind(device))\r\n\r\n    // Show audio selection UI if it is supported by the browser.\r\n    if (device.audio.isOutputSelectionSupported) {\r\n      console.log(\"audioSelectionDiv.classList.remove('hide')\") // audioSelectionDiv.classList.remove('hide')\r\n    }\r\n  }\r\n\r\n  const handleIncomingCall = (call) => {\r\n    console.log(`Incoming call from ${call.parameters.From}`)\r\n    setCall(call);\r\n    setIsIncomingCall(true);\r\n  }\r\n\r\n  const updateAllAudioDevices = () => {\r\n    if (device) {\r\n      updateDevices('speakerDevices', device.audio.speakerDevices.get())\r\n      updateDevices('ringtoneDevices', device.audio.ringtoneDevices.get())\r\n    }\r\n  }\r\n\r\n  const updateDevices = (selectEl, selectedDevices) => {\r\n    // selectEl.innerHTML = \"\";\r\n\r\n    device.audio.availableOutputDevices.forEach(function (device, id) {\r\n      var isActive = selectedDevices.size === 0 && id === 'default'\r\n      selectedDevices.forEach(function (device) {\r\n        if (device.deviceId === id) {\r\n          isActive = true\r\n        }\r\n      })\r\n      // var option = document.createElement(\"option\");\r\n      // option.label = device.label;\r\n      // option.setAttribute(\"data-id\", id);\r\n      // if (isActive) {\r\n      //   option.setAttribute(\"selected\", \"selected\");\r\n      // }\r\n      // selectEl.appendChild(option);\r\n    })\r\n  }\r\n\r\n  const makeOutgoingCall = async (number) => {\r\n    var params = {\r\n      // get the phone number to call from the DOM\r\n      To: number,\r\n    }\r\n\r\n    if (device) {\r\n      console.log(`Attempting to call ${params.To} ...`)\r\n\r\n      // Twilio.Device.connect() returns a Call object\r\n      try {\r\n        const twilioCall = await device.connect({ params })\r\n        registerCallEvents(twilioCall)\r\n        // call = twilioCall\r\n        setCall(twilioCall)\r\n      }\r\n      catch (err) {\r\n        console.log(err)\r\n      }\r\n\r\n      // add listeners to the Call\r\n      // \"accepted\" means the call has finished connecting and the state is now \"open\"\r\n      // call.on('accept', updateUIAcceptedOutgoingCall)\r\n      // call.on('disconnect', updateUIDisconnectedOutgoingCall)\r\n      // call.on('cancel', updateUIDisconnectedOutgoingCall)\r\n\r\n      // outgoingCallHangupButton.onclick = () => {\r\n      //   console.log('Hanging up ...')\r\n      //   call.disconnect()\r\n      // }\r\n    } else {\r\n      console.log('Unable to make call.')\r\n    }\r\n  }\r\n\r\n  const getUserMedia = () => {\r\n    navigator.getUserMedia =\r\n      navigator.getUserMedia ||\r\n      navigator.webkitGetUserMedia ||\r\n      navigator.mozGetUserMedia\r\n    return new Promise((resolve, reject) => {\r\n      navigator.getUserMedia({ video: true, audio: true }, resolve, reject)\r\n    })\r\n  }\r\n\r\n  const registerCallEvents = (call) => {\r\n    // add listeners to the Call\r\n    // \"accepted\" means the call has finished connecting and the state is now \"open\"\r\n    call.on('accept', (remoteStream) => {\r\n      // dialpad.setOnCall()\r\n      console.log(\"registerCallEvents: accept\")\r\n      handleReplied()\r\n    })\r\n    call.on('disconnect', () => {\r\n      // dialpad.endCall()\r\n      setIsCalling(false);\r\n      setIsCallingState(false);\r\n      console.log(\"registerCallEvents: disconnect\")\r\n    })\r\n    call.on('cancel', () => {\r\n      // dialpad.endCall()\r\n      console.log(\"registerCallEvents: cancel\")\r\n      handleEndCall()\r\n    })\r\n  }\r\n\r\n  const onClickNumber = (number) => {\r\n    props.setDialNumber(props.dialNumber + number)\r\n  }\r\n\r\n  const handlePhoneNumber = (number) => {\r\n    console.log(number)\r\n    props.setDialNumber(number);\r\n  }\r\n\r\n  const handleDialing = async (setCalling) => {\r\n    // startUpClient();\r\n    setIsCalling(setCalling);\r\n    console.log('Calling...', props.dialNumber)\r\n    makeOutgoingCall(props.dialNumber)\r\n    props.setDialNumber('');\r\n  }\r\n\r\n  // useEffect(() => {\r\n  // }, [props.dialNumber])\r\n\r\n  const handleEndCall = () => {\r\n    try {\r\n      console.log(\"call:\", call)\r\n      call.disconnect()\r\n      console.log(\"call disconnected\");\r\n      setIsCalling(false);\r\n      setIsCallingState(false);\r\n      props.triggerReload(true);\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const handleReplied = () => {\r\n    setIsCallingState(true);\r\n  }\r\n\r\n  return (\r\n    <Stack justifyContent=\"center\" alignItems=\"center\" spacing={5}>\r\n      <CallFrom />\r\n      {\r\n        !isCalling ? (\r\n          <>\r\n            <CallInput handlePhoneNumber={handlePhoneNumber} phoneNumber={props.dialNumber} handleDialing={handleDialing} />\r\n            <DialButton onClickNumber={onClickNumber} />\r\n          </>\r\n        )\r\n          : <CallingPad isCallStarted={isCallingState} endCall={handleEndCall} user={props.user} call={call} makeCall={makeOutgoingCall} timestamp={new Date().getTime()} />\r\n\r\n      }\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default DialPad\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { useEffect, useState, useMemo } from 'react'\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport { FixedSizeList } from 'react-window';\r\nimport get from '../../api/info/get';\r\nimport { loadToken } from '../../api/auth/utils';\r\n\r\nfunction renderRow(props) {\r\n  const { data, index, style, triggerDialNumber } = props;\r\n\r\n  return (\r\n    <>\r\n      <ListItem style={style} key={index} component=\"div\">\r\n        <ListItemButton style={{ minHeight: \"60px\" }} onClick={() => triggerDialNumber(data[index]?.phone)}>\r\n          <ListItemAvatar>\r\n            {/* <Avatar alt={`${index + 1}`} src=\"/static/images/avatar/1.jpg\" /> */}\r\n            <Avatar alt={data[index]?.name} src=\"/static/images/avatar/1.jpg\" />\r\n          </ListItemAvatar>\r\n          {/* <ListItemText primary={`User ${index + 1}`} */}\r\n          <ListItemText primary={data[index]?.name}\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography\r\n                  sx={{ display: 'inline' }}\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  color=\"text.primary\"\r\n                >\r\n                  Number\r\n                </Typography>\r\n                {data[index]?.phone}\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </ListItemButton>\r\n      </ListItem>\r\n      {/* <Divider variant=\"inset\" component=\"li\" /> */}\r\n    </>\r\n    // <>\r\n    //   <ListItem alignItems=\"flex-start\" style={style} key={index}>\r\n    //     <ListItemAvatar>\r\n    //       <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n    //     </ListItemAvatar>\r\n    //     <ListItemText\r\n    //       primary={`User ${index + 1}`}\r\n    //     // secondary={\r\n    //     //   <React.Fragment>\r\n    //     //     <Typography\r\n    //     //       sx={{ display: 'inline' }}\r\n    //     //       component=\"span\"\r\n    //     //       variant=\"body2\"\r\n    //     //       color=\"text.primary\"\r\n    //     //     >\r\n    //     //       Ali Connors\r\n    //     //     </Typography>\r\n    //     //     {\" — I'll be in your neighborhood doing errands this…\"}\r\n    //     //   </React.Fragment>\r\n    //     // }\r\n    //     />\r\n    //   </ListItem>\r\n    //   {/* <Divider variant=\"inset\" component=\"li\" /> */}\r\n    // </>\r\n  );\r\n}\r\n\r\nexport default function ContactList(props) {\r\n  // const data = [\r\n  //   { name: \"Tom Toggas\", number: \" +1 202-415-2935\" },\r\n  //   { name: \"Test Client\", number: \" +1 612-429-4725\" }\r\n  // ]\r\n  const triggerDialNumber = props.setDialNumber;\r\n\r\n  const [clients, setClients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const clients = await get(loadToken(), \"api/clients\");\r\n      console.log(clients);\r\n      setClients(clients);\r\n    }\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      style={{ width: \"100%\" }}\r\n    >\r\n      <Grid item xs={5} style={{ display: \"flex\", justifyContent: \"center\", borderRight: \"ridge\" }}>\r\n        <h1 style={{ width: \"100%\", textAlign: \"center\", verticalAlign: \"center\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}> Contacts</h1>\r\n      </Grid>\r\n      <Grid item xs={5} style={{ display: \"flex\", justifyContent: \"center\", borderRight: \"ridge\" }}>\r\n        <Box\r\n          sx={{ width: '100%', height: \"100%\", maxWidth: \"none\", bgcolor: 'background.paper' }}\r\n        >\r\n          <FixedSizeList\r\n            height={600}\r\n            itemSize={60}\r\n            itemCount={clients?.length}\r\n            overscanCount={5}\r\n            itemData={clients}\r\n          // style={{ height: \"100% !important\" }}\r\n          >\r\n            {(props) => renderRow({ ...props, triggerDialNumber })}\r\n          </FixedSizeList>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport { FixedSizeList } from 'react-window';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport AWS from 'aws-sdk';\r\n\r\nAWS.config.update({ accessKeyId: 'AKIAYJALDLHGA4ZVWLOU', secretAccessKey: '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', region: 'us-east-1' });\r\nvar s3 = new AWS.S3();\r\n\r\nvar params = {\r\n  Bucket: 'call-center-recording-store',\r\n  Prefix: 'AC0ef229572e466259231e6fe6d9dc3ad8'\r\n}\r\n\r\nfunction renderRow(props) {\r\n  const { data, index, style } = props;\r\n\r\n  return (\r\n    <>\r\n      <ListItem style={style} key={index} component=\"div\">\r\n        <ListItemButton style={{ minHeight: \"30px\" }}>\r\n          <ListItemIcon>\r\n            <CallIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary={`Outgoing call ${index + 1}`}\r\n          // secondary={\r\n          //   <React.Fragment>\r\n          //     <Typography\r\n          //       sx={{ display: 'inline' }}\r\n          //       component=\"span\"\r\n          //       variant=\"body2\"\r\n          //       color=\"text.primary\"\r\n          //     >\r\n\r\n          //     </Typography>\r\n          //   </React.Fragment>\r\n          // }\r\n          />\r\n          <audio controls>\r\n            <source src={\"https://call-center-recording-store.s3.amazonaws.com/\" + data[index].Key} height=\"30px\" type=\"audio/x-wav\" />\r\n          </audio>\r\n        </ListItemButton>\r\n      </ListItem>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function CallHistory(props) {\r\n  const [callList, setCallList] = useState([]);\r\n  console.log(props.isReload)\r\n  useEffect(() => {\r\n    s3.listObjectsV2(params, function (err, data) {\r\n      if (err) console.log(err, err.stack); // an error occurred\r\n      else {\r\n        console.log(\"key values : \", data); // successful response\r\n        setCallList(data);\r\n      }\r\n    });\r\n  }, [])\r\n\r\n  if (props.isReload) {\r\n    s3.listObjectsV2(params, function (err, data) {\r\n      if (err) console.log(err, err.stack); // an error occurred\r\n      else {\r\n        console.log(\"key values : \", data); // successful response\r\n        setCallList(data);\r\n      }\r\n    });\r\n    props.triggerReload(false);\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      style={{ width: \"100%\" }}\r\n    >\r\n      <Grid item xs={5} style={{ display: \"flex\", justifyContent: \"center\", borderRight: \"ridge\" }}>\r\n        <h1 style={{ width: \"100%\", textAlign: \"center\", verticalAlign: \"center\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}> History</h1>\r\n      </Grid>\r\n      <Grid item xs={5} style={{ display: \"flex\", justifyContent: \"center\", borderRight: \"ridge\" }}>\r\n        <Box\r\n          sx={{ width: '100%', height: \"100%\", maxWidth: \"none\", bgcolor: 'background.paper' }}\r\n        >\r\n          <FixedSizeList\r\n            height={600}\r\n            itemSize={70}\r\n            itemCount={callList.Contents?.length}\r\n            overscanCount={5}\r\n            itemData={callList.Contents}\r\n          // style={{ height: \"100% !important\" }}\r\n          >\r\n            {renderRow}\r\n          </FixedSizeList>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import { Button } from '@mui/material'\r\nimport Page from 'material-ui-shell/lib/containers/Page'\r\nimport { forwardRef } from 'react'\r\nimport React, { useEffect, useState, useMemo } from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport DialPad from \"../../components/DialPad\";\r\nimport ContactList from \"../../components/ContactList\"\r\nimport CallHistory from \"../../components/CallHistory\"\r\nimport { me } from \"../../api/info\";\r\n\r\nconst Call = () => {\r\n  const [spacing, setSpacing] = React.useState(12);\r\n  const [number, setNumber] = useState('');\r\n  const [reload, setReload] = useState(false);\r\n\r\n  const handleNumber = (num) => {\r\n    console.log(num);\r\n    setNumber(num);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"----- reload event triggered ------\");\r\n  }, [reload])\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      style={{ height: \"100%\" }}\r\n    >\r\n      <Grid item xs={5} style={{ display: \"flex\", justifyContent: \"center\", borderRight: \"ridge\" }}>\r\n        {/* <h1 style={{ width: \"100%\", textAlign: \"center\", verticalAlign: \"center\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}> No call history</h1> */}\r\n        <div style={{\r\n          width: \"100%\",\r\n          height: \"90vh\",\r\n        }}>\r\n          <CallHistory isReload={reload} triggerReload={setReload} />\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={4} style={{ display: \"flex\", justifyContent: \"center\", borderRight: \"ridge\", width: \"100%\" }}>\r\n        <div style={{\r\n          width: \"100%\",\r\n          height: \"90vh\"\r\n        }}>\r\n          <ContactList setDialNumber={handleNumber} />\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={3} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n        {/* <div className=\"col\" style={style}>Your number: {number}</div> */}\r\n        <div style={{\r\n          marginBottom: \"10%\",\r\n          marginTop: \"10%\",\r\n          width: \"100%\",\r\n          height: \"100%\"\r\n        }}>\r\n          <DialPad triggerReload={setReload} dialNumber={number} setDialNumber={handleNumber} user={\"Tom\"} />\r\n        </div>\r\n\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\nexport default Call\r\n","import { Route, Routes } from 'react-router-dom';\r\nimport CallView from './Call';\r\n\r\n/**\r\n * Routes for \"Welcome\" view\r\n * url: / || /welcome/*\r\n */\r\nconst CallRoutes = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<CallView />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default CallRoutes;\r\n"],"names":["token","endpoint","process","REACT_APP_MULTIPASS","nameFirst","nameLast","phone","email","setAuthToken","api","get","res","status","data","log","warn","error","undefined","props","useAppStore","state","sx","p","display","alignItems","width","variant","currentUser","ml","flex","placeholder","inputProps","value","phoneNumber","onChange","e","handlePhoneNumber","target","m","color","disabled","length","onClick","handleDialing","mr","Counter","getReturnValues","countDown","Math","floor","countDownDate","timestamp","useState","setCountDown","useEffect","interval","setInterval","current","Date","getTime","clearInterval","useCountdown","hours","minutes","seconds","className","BootstrapDialog","styled","Dialog","theme","padding","spacing","BootstrapDialogTitle","children","onClose","other","DialogTitle","IconButton","position","right","top","palette","grey","Close","displayDial","setDisplayDial","topMarketerNumber","setTopMarketerNumber","names","setNames","isAdded","setIsAdded","handleClose","handleAdd","post","PhoneNumber","SessionID","id","getClients","loadToken","clients","console","style","height","marginTop","justifyContent","direction","Avatar","src","avatar_image","name","user","isCallStarted","marginBottom","Fab","Add","endCall","Call","open","minWidth","DialogContent","dividers","FormControl","size","InputLabel","Select","labelId","label","event","map","MenuItem","_id","TextField","InputProps","readOnly","DialogActions","autoFocus","onClickNumber","number","alpha","item","container","rowSpacing","row","index","xs","useNavigate","useLocation","useCall","isCallingState","setIsCallingState","setIsIncomingCall","call","setCall","device","setDevice","isCalling","acceptIncomingCall","rejectIncomingCall","hangupIncomingCall","handleDisconnectedIncomingCall","setIsCalling","twilioToken","useSocket","startUpClient","dialNumber","setDialNumber","getFetch","addDeviceListeners","register","err","initializeDevice","accessToken","Device","logLevel","codecPreferences","on","message","handleIncomingCall","audio","updateAllAudioDevices","bind","isOutputSelectionSupported","parameters","From","updateDevices","speakerDevices","ringtoneDevices","selectEl","selectedDevices","availableOutputDevices","forEach","deviceId","makeOutgoingCall","params","To","connect","twilioCall","registerCallEvents","remoteStream","handleReplied","handleEndCall","setCalling","disconnect","triggerReload","Stack","CallFrom","CallingPad","makeCall","CallInput","DialButton","ContactList","triggerDialNumber","setClients","init","Grid","borderRight","textAlign","verticalAlign","Box","maxWidth","bgcolor","FixedSizeList","itemSize","itemCount","overscanCount","itemData","ListItem","component","ListItemButton","minHeight","ListItemAvatar","alt","ListItemText","primary","secondary","Typography","renderRow","AWS","accessKeyId","secretAccessKey","region","s3","Bucket","Prefix","ListItemIcon","controls","Key","type","CallHistory","callList","setCallList","isReload","listObjectsV2","stack","Contents","React","setNumber","reload","setReload","handleNumber","num","path","element"],"sourceRoot":""}